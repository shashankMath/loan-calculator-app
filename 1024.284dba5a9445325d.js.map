{"version":3,"file":"1024.284dba5a9445325d.js","mappings":"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","names":["Menu","constructor","hostRef","registerInstance","this","ionWillOpen","createEvent","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","GESTURE_CONTROLLER","createBlocker","disableScroll","didLoad","operationCancelled","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","getPresentedOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","isEndSide","contentId","undefined","menuId","type","disabled","side","swipeGesture","maxEdgeStart","typeChanged","oldType","contentEl","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","_this","_asyncToGenerator","customElements","whenDefined","config","get","content","getElementById","console","error","menuController","_register","menuChanged","gesture","Promise","resolve","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","inheritAriaAttributes","componentDidLoad","_this2","splitPane","closest","isVisible","disconnectedCallback","_this3","close","destroy","_unregister","onSplitPaneChanged","closestSplitPane","target","detail","visible","onBackdropClick","timeStamp","composedPath","includes","preventDefault","stopPropagation","BACKDROP","onKeydown","key","isOpen","isActive","_isActive","animated","setOpen","role","toggle","shouldOpen","_setOpen","doc","lastFocus","focusFirstDescendant","activeElement","focusLastDescendant","_this4","beforeAnimation","loadAnimation","startAnimation","afterAnimation","_this5","width","offsetWidth","isEndSide$1","_createAnimation","getBoolean","duration","fill","_this6","isReversed","mode","getIonMode","easing","easingReverse","ani","direction","play","sync","getDirection","canSwipe","querySelector","_getOpenSync","checkEdgeSide","window","currentX","GESTURE","progressStart","assert","stepValue","computeDelta","deltaX","progressStep","delta","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","getTimeGivenProgression","clamp","playTo","onFinish","oneTimeCallback","progressEnd","isPlatform","setAttribute","SHOW_MENU","backdropEl","SHOW_BACKDROP","MENU_CONTENT_OPEN","block","_a","unblock","focus","addEventListener","stop","removeEventListener","enable","render","h","Host","onKeyDown","shouldUseCloseWatcher","class","m","hostContext","part","ref","tappable","getElement","watchers","Math","max","win","posX","innerWidth","style","ios","md","updateVisibility","_ref","menu","menuEl","_x","apply","arguments","MenuButton","_this7","onClick","color","autoHide","visibilityChanged","_this8","menuIcon","menuOutline","menuSharp","hidden","attrs","ariaLabel","createColorClasses","u","button","Object","assign","icon","lazy","MenuToggle","_this9","t","selector","cssClassMap","length","getClassMap","classes","map","getClassList","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","url","test","router","push","_x2","_x3","_x4"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-28849c61.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { o as getPresentedOverlay, B as BACKDROP, n as focusFirstDescendant, q as focusLastDescendant, G as GESTURE } from './overlays-e7b9d6d9.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-314a54f6.js';\nimport { shouldUseCloseWatcher } from './hardware-back-button-06ef3c3e.js';\nimport { n as isEndSide, i as inheritAriaAttributes, m as assert, j as clamp } from './helpers-da915de8.js';\nimport { m as menuController } from './index-24b48b06.js';\nimport { c as config, b as getIonMode, a as isPlatform } from './ionic-global-c81d82ab.js';\nimport { h as hostContext, c as createColorClasses } from './theme-01f3f29c.js';\nimport { u as menuOutline, v as menuSharp } from './index-e2cf2ceb.js';\nimport './index-a5d50daf.js';\nimport './framework-delegate-63d1a679.js';\nimport './index-9b0d46f4.js';\nimport './animation-eab5a4ca.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst IonMenuIosStyle0 = menuIosCss;\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst IonMenuMdStyle0 = menuMdCss;\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst Menu = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.didLoad = false;\n        /**\n         * Flag used to determine if an open/close\n         * operation was cancelled. For example, if\n         * an app calls \"menu.open\" then disables the menu\n         * part way through the animation, then this would\n         * be considered a cancelled operation.\n         */\n        this.operationCancelled = false;\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.inheritedAttributes = {};\n        this.handleFocus = (ev) => {\n            /**\n             * Overlays have their own focus trapping listener\n             * so we do not want the two listeners to conflict\n             * with each other. If the top-most overlay that is\n             * open does not contain this ion-menu, then ion-menu's\n             * focus trapping should not run.\n             */\n            const lastOverlay = getPresentedOverlay(document);\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\n                return;\n            }\n            this.trapKeyboardFocus(ev, document);\n        };\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        this.contentId = undefined;\n        this.menuId = undefined;\n        this.type = undefined;\n        this.disabled = false;\n        this.side = 'start';\n        this.swipeGesture = true;\n        this.maxEdgeStart = 50;\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen,\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        this.animation = undefined;\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async connectedCallback() {\n        // TODO: connectedCallback is fired in CE build\n        // before WC is defined. This needs to be fixed in Stencil.\n        if (typeof customElements !== 'undefined' && customElements != null) {\n            await customElements.whenDefined('ion-menu');\n        }\n        if (this.type === undefined) {\n            this.type = config.get('menuType', 'overlay');\n        }\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n        if (content === null) {\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        if (this.el.contains(content)) {\n            console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuController._register(this);\n        this.menuChanged();\n        this.gesture = (await import('./index-39782642.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            blurOnStart: true,\n            canStart: (ev) => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    async componentDidLoad() {\n        this.didLoad = true;\n        /**\n         * A menu inside of a split pane is assumed\n         * to be a side pane.\n         *\n         * When the menu is loaded it needs to\n         * see if it should be considered visible inside\n         * of the split pane. If the split pane is\n         * hidden then the menu should be too.\n         */\n        const splitPane = this.el.closest('ion-split-pane');\n        if (splitPane !== null) {\n            this.isPaneVisible = await splitPane.isVisible();\n        }\n        this.menuChanged();\n        this.updateState();\n    }\n    menuChanged() {\n        /**\n         * Inform dependent components such as ion-menu-button\n         * that the menu is ready. Note that we only want to do this\n         * once the menu has been rendered which is why we check for didLoad.\n         */\n        if (this.didLoad) {\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n        }\n    }\n    async disconnectedCallback() {\n        /**\n         * The menu should be closed when it is\n         * unmounted from the DOM.\n         * This is an async call, so we need to wait for\n         * this to finish otherwise contentEl\n         * will not have MENU_CONTENT_OPEN removed.\n         */\n        await this.close(false);\n        this.blocker.destroy();\n        menuController._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        const closestSplitPane = this.el.closest('ion-split-pane');\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\n            this.isPaneVisible = ev.detail.visible;\n            this.updateState();\n        }\n    }\n    onBackdropClick(ev) {\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close(undefined, BACKDROP);\n            }\n        }\n    }\n    onKeydown(ev) {\n        if (ev.key === 'Escape') {\n            this.close(undefined, BACKDROP);\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true, role) {\n        return this.setOpen(false, animated, role);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true, role) {\n        return menuController._setOpen(this, shouldOpen, animated, role);\n    }\n    trapKeyboardFocus(ev, doc) {\n        const target = ev.target;\n        if (!target) {\n            return;\n        }\n        /**\n         * If the target is inside the menu contents, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (this.el.contains(target)) {\n            this.lastFocus = target;\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus go out of the menu.\n             * Wrap the focus to either the first or last element.\n             */\n            const { el } = this;\n            /**\n             * Once we call `focusFirstDescendant`, another focus event\n             * will fire, which will cause `lastFocus` to be updated\n             * before we can run the code after that. We cache the value\n             * here to avoid that.\n             */\n            focusFirstDescendant(el);\n            /**\n             * If the cached last focused element is the same as the now-\n             * active element, that means the user was on the first element\n             * already and pressed Shift + Tab, so we need to wrap to the\n             * last descendant.\n             */\n            if (this.lastFocus === doc.activeElement) {\n                focusLastDescendant(el);\n            }\n        }\n    }\n    async _setOpen(shouldOpen, animated = true, role) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen, role);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        /**\n         * If the animation was cancelled then\n         * return false because the operation\n         * did not succeed.\n         */\n        if (this.operationCancelled) {\n            this.operationCancelled = false;\n            return false;\n        }\n        this.afterAnimation(shouldOpen, role);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        /**\n         * Menu direction animation is calculated based on the document direction.\n         * If the document direction changes, we need to create a new animation.\n         */\n        const isEndSide$1 = isEndSide(this.side);\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\n            return;\n        }\n        this.width = width;\n        this.isEndSide = isEndSide$1;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        animation.fill('both');\n    }\n    async startAnimation(shouldOpen, animated) {\n        const isReversed = !shouldOpen;\n        const mode = getIonMode(this);\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n        const ani = this.animation\n            .direction(isReversed ? 'reverse' : 'normal')\n            .easing(isReversed ? easingReverse : easing);\n        if (animated) {\n            await ani.play();\n        }\n        else {\n            ani.play({ sync: true });\n        }\n        /**\n         * We run this after the play invocation\n         * instead of using ani.onFinish so that\n         * multiple onFinish callbacks do not get\n         * run if an animation is played, stopped,\n         * and then played again.\n         */\n        if (ani.getDirection() === 'reverse') {\n            ani.direction('normal');\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        // Do not allow swipe gesture if a modal is open\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n        if (isModalPresented || !this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n        }\n        else if (menuController._getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen, GESTURE);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide\n                ? shouldCompleteRight\n                : shouldCompleteLeft\n            : isEndSide\n                ? shouldCompleteLeft\n                : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        this.lastOnEnd = detail.currentTime;\n        // Account for rounding errors in JS\n        let newStepValue = shouldComplete ? 0.001 : -0.001;\n        /**\n         * stepValue can sometimes return a negative\n         * value, but you can't have a negative time value\n         * for the cubic bezier curve (at least with web animations)\n         */\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n        /**\n         * Animation will be reversed here, so need to\n         * reverse the easing curve as well\n         *\n         * Additionally, we need to account for the time relative\n         * to the new easing curve, as `stepValue` is going to be given\n         * in terms of a linear curve.\n         */\n        newStepValue +=\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n        this.animation\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n            .onFinish(() => this.afterAnimation(shouldOpen, GESTURE), { oneTimeCallback: true })\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n    }\n    beforeAnimation(shouldOpen, role) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        /**\n         * When the menu is presented on an Android device, TalkBack's focus rings\n         * may appear in the wrong position due to the transition (specifically\n         * `transform` styles). This occurs because the focus rings are initially\n         * displayed at the starting position of the elements before the transition\n         * begins. This workaround ensures the focus rings do not appear in the\n         * incorrect location.\n         *\n         * If this solution is applied to iOS devices, then it leads to a bug where\n         * the overlays cannot be accessed by screen readers. This is due to\n         * VoiceOver not being able to update the accessibility tree when the\n         * `aria-hidden` is removed.\n         */\n        if (isPlatform('android')) {\n            this.el.setAttribute('aria-hidden', 'true');\n        }\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        /**\n         * We add a tabindex here so that focus trapping\n         * still works even if the menu does not have\n         * any focusable elements slotted inside. The\n         * focus trapping utility will fallback to focusing\n         * the menu so focus does not leave when the menu\n         * is open.\n         */\n        this.el.setAttribute('tabindex', '0');\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        // add css class and hide content behind menu from screen readers\n        if (this.contentEl) {\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            /**\n             * When the menu is open and overlaying the main\n             * content, the main content should not be announced\n             * by the screenreader as the menu is the main\n             * focus. This is useful with screenreaders that have\n             * \"read from top\" gestures that read the entire\n             * page from top to bottom when activated.\n             * This should be done before the animation starts\n             * so that users cannot accidentally scroll\n             * the content while dragging a menu open.\n             */\n            this.contentEl.setAttribute('aria-hidden', 'true');\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit({ role });\n        }\n    }\n    afterAnimation(isOpen, role) {\n        var _a;\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            /**\n             * When the menu is presented on an Android device, TalkBack's focus rings\n             * may appear in the wrong position due to the transition (specifically\n             * `transform` styles). The menu is hidden from screen readers during the\n             * transition to prevent this. Once the transition is complete, the menu\n             * is shown again.\n             */\n            if (isPlatform('android')) {\n                this.el.removeAttribute('aria-hidden');\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n            /**\n             * Move focus to the menu to prepare focus trapping, as long as\n             * it isn't already focused. Use the host element instead of the\n             * first descendant to avoid the scroll position jumping around.\n             */\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n            if (focusedMenu !== this.el) {\n                this.el.focus();\n            }\n            // start focus trapping\n            document.addEventListener('focus', this.handleFocus, true);\n        }\n        else {\n            this.el.removeAttribute('aria-hidden');\n            // remove css classes and unhide content from screen readers\n            this.el.classList.remove(SHOW_MENU);\n            /**\n             * Remove tabindex from the menu component\n             * so that is cannot be tabbed to.\n             */\n            this.el.removeAttribute('tabindex');\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n                /**\n                 * Remove aria-hidden so screen readers\n                 * can announce the main content again\n                 * now that the menu is not the main focus.\n                 */\n                this.contentEl.removeAttribute('aria-hidden');\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            if (this.animation) {\n                this.animation.stop();\n            }\n            // emit close event\n            this.ionDidClose.emit({ role });\n            // undo focus trapping so multiple menus don't collide\n            document.removeEventListener('focus', this.handleFocus, true);\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.enable(isActive && this.swipeGesture);\n        }\n        /**\n         * If the menu is disabled but it is still open\n         * then we should close the menu immediately.\n         * Additionally, if the menu is in the process\n         * of animating {open, close} and the menu is disabled\n         * then it should still be closed immediately.\n         */\n        if (!isActive) {\n            /**\n             * It is possible to disable the menu while\n             * it is mid-animation. When this happens, we\n             * need to set the operationCancelled flag\n             * so that this._setOpen knows to return false\n             * and not run the \"afterAnimation\" callback.\n             */\n            if (this.isAnimating) {\n                this.operationCancelled = true;\n            }\n            /**\n             * If the menu is disabled then we should\n             * forcibly close the menu even if it is open.\n             */\n            this.afterAnimation(false, GESTURE);\n        }\n    }\n    render() {\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\n        const mode = getIonMode(this);\n        /**\n         * If the Close Watcher is enabled then\n         * the ionBackButton listener in the menu controller\n         * will handle closing the menu when Escape is pressed.\n         */\n        return (h(Host, { key: 'da96fdb4c5ddf60e615cc4cdda7ccdb3fd7e089b', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n                [mode]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                [`menu-side-${side}`]: true,\n                'menu-pane-visible': isPaneVisible,\n                'split-pane-side': hostContext('ion-split-pane', el),\n            } }, h(\"div\", { key: '894e680fe227534711128c7aca980964ddb5a08a', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: 'e9f5934518dc0cceaeadf1f2820614595fec6bc9' })), h(\"ion-backdrop\", { key: '7282077817657b1bb6c155f1404c0a519fece993', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n};\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nMenu.style = {\n    ios: IonMenuIosStyle0,\n    md: IonMenuMdStyle0\n};\n\n// Given a menu, return whether or not the menu toggle should be visible\nconst updateVisibility = async (menu) => {\n    const menuEl = await menuController.get(menu);\n    return !!(menuEl && (await menuEl.isActive()));\n};\n\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #0054e9);--padding-start:5px;--padding-end:5px;min-height:32px;font-size:clamp(31px, 1.9375rem, 38.13px)}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\nconst IonMenuButtonIosStyle0 = menuButtonIosCss;\n\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:3rem;height:3rem;font-size:1.5rem}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\nconst IonMenuButtonMdStyle0 = menuButtonMdCss;\n\nconst MenuButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inheritedAttributes = {};\n        this.onClick = async () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.color = undefined;\n        this.disabled = false;\n        this.menu = undefined;\n        this.autoHide = true;\n        this.type = 'button';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    componentDidLoad() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const { color, disabled, inheritedAttributes } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type,\n        };\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\n        return (h(Host, { key: '7ec29715ce7926b7c2b08f3d9cac8aaa16b3dc28', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                button: true, // ion-buttons target .button\n                'menu-button-hidden': hidden,\n                'menu-button-disabled': disabled,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }) }, h(\"button\", Object.assign({ key: 'd4c5929264af3ba0328118bcc27d2ab7ef5d3809' }, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { key: '7bfa6e9a93105486623d044861e879ec79ff64f1', class: \"button-inner\" }, h(\"slot\", { key: '071ab58e285832fc188706166f5547d45d501ac5' }, h(\"ion-icon\", { key: '918ec5d791921de9821c347af4f65f97dd94aabf', part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { key: '00ffdd53f635e706c1dbd01b8e7944498650fe81', type: \"unbounded\" }))));\n    }\n    get el() { return getElement(this); }\n};\nMenuButton.style = {\n    ios: IonMenuButtonIosStyle0,\n    md: IonMenuButtonMdStyle0\n};\n\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\nconst IonMenuToggleStyle0 = menuToggleCss;\n\nconst MenuToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.onClick = () => {\n            return menuController.toggle(this.menu);\n        };\n        this.visible = false;\n        this.menu = undefined;\n        this.autoHide = true;\n    }\n    connectedCallback() {\n        this.visibilityChanged();\n    }\n    async visibilityChanged() {\n        this.visible = await updateVisibility(this.menu);\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { key: '7c27ea5b0795676bf5cb33e1f83aa142c197f64e', onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", { key: '69f187becedc0fe34603d41d279f043cf0fdf776' })));\n    }\n};\nMenuToggle.style = IonMenuToggleStyle0;\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}