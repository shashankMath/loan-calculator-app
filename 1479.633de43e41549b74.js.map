{"version":3,"file":"1479.633de43e41549b74.js","mappings":"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","names":["Reorder","constructor","hostRef","registerInstance","this","onClick","ev","reorderGroup","el","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","h","Host","key","class","icon","reorderThreeOutline","reorderTwoSharp","lazy","part","getElement","style","ios","md","ReorderGroup","ionItemReorder","createEvent","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabledChanged","gesture","enable","connectedCallback","_this","_asyncToGenerator","contentEl","findClosestIonContent","scrollEl","getScrollElement","Promise","resolve","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","completeReorder","selectedItemEl","reorderEl","event","target","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","hapticSelectionStart","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","toIndex","itemIndexForTop","fromIndex","hapticSelectionChanged","reorderMove","transform","emit","from","to","hapticSelectionEnd","len","raf","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","e","watchers","element","node","container","parent","parentElement","array","splice","slice"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, f as Host, i as getElement, d as createEvent } from './index-28849c61.js';\nimport { j as reorderThreeOutline, k as reorderTwoSharp } from './index-e2cf2ceb.js';\nimport { b as getIonMode } from './ionic-global-c81d82ab.js';\nimport { f as findClosestIonContent, g as getScrollElement } from './index-5cc724f3.js';\nimport { r as raf } from './helpers-da915de8.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-ac164e4c.js';\nimport './index-9b0d46f4.js';\nimport './capacitor-59395cbd.js';\nimport './index-a5d50daf.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\nconst IonReorderIosStyle0 = reorderIosCss;\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\nconst IonReorderMdStyle0 = reorderMdCss;\n\nconst Reorder = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n        const reorderGroup = this.el.closest('ion-reorder-group');\n        ev.preventDefault();\n        // Only stop event propagation if the reorder is inside of an enabled\n        // reorder group. This allows interaction with clickable children components.\n        if (!reorderGroup || !reorderGroup.disabled) {\n            ev.stopImmediatePropagation();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n        return (h(Host, { key: '27266e30bcb7e10c57fb6d546399cfb1f1c93b23', class: mode }, h(\"slot\", { key: '8745cb9a31458e884c27eed1fb90d104fe9a79eb' }, h(\"ion-icon\", { key: '6c4b9631a2f5610f1e21b2db025b6702d0d593bf', icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\n    }\n    get el() { return getElement(this); }\n};\nReorder.style = {\n    ios: IonReorderIosStyle0,\n    md: IonReorderMdStyle0\n};\n\nconst reorderGroupCss = \".reorder-list-active>*{display:block;-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\nconst IonReorderGroupStyle0 = reorderGroupCss;\n\nconst ReorderGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* ReorderGroupState.Idle */;\n        this.disabled = true;\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = findClosestIonContent(this.el);\n        if (contentEl) {\n            this.scrollEl = await getScrollElement(contentEl);\n        }\n        this.gesture = (await import('./index-39782642.js')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: (detail) => this.canStart(detail),\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeReorder(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = (this.selectedItemEl = ev.data);\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* ReorderGroupState.Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* ReorderGroupState.Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* ReorderGroupState.Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeReorder();\n        }\n        else {\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeReorder.bind(this),\n            });\n        }\n        hapticSelectionEnd();\n    }\n    completeReorder(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\n            const children = this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            /**\n             * insertBefore and setting the transform\n             * needs to happen in the same frame otherwise\n             * there will be a duplicate transition. This primarily\n             * impacts Firefox where insertBefore and transform operations\n             * are happening in two separate frames.\n             */\n            raf(() => {\n                if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n                    const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n                    this.el.insertBefore(selectedItemEl, ref);\n                }\n                for (let i = 0; i < len; i++) {\n                    children[i].style['transform'] = '';\n                }\n            });\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* ReorderGroupState.Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        for (let i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                return i;\n            }\n        }\n        return heights.length - 1;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -SCROLL_JUMP;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'a38c7fbceb677201330a602273d5b55abb32da19', class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\nReorderGroup.style = IonReorderGroupStyle0;\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"x_google_ignoreList":[0]}