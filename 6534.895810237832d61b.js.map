{"version":3,"file":"6534.895810237832d61b.js","mappings":"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","names":["isDayDisabled","refParts","minParts","maxParts","dayValues","day","undefined","includes","isBefore","isAfter","isMonthDisabled","isYearDisabled","refYear","year","warnIfTimeZoneProvided","el","formatOptions","_a","_b","_c","_d","date","timeZone","timeZoneName","time","printIonWarning","checkForPresentationFormatMismatch","presentation","Datetime","constructor","hostRef","_this","this","registerInstance","ionCancel","createEvent","ionChange","ionValueChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","warnIfIncorrectValueUsage","multiple","value","Array","isArray","map","v","join","setValue","emit","getActivePartsWithFallback","defaultParts","getActivePart","activeParts","closeParentOverlay","role","popoverOrModal","closest","dismiss","setWorkingParts","parts","workingParts","Object","assign","setActiveParts","removeDate","readonly","validatedParts","validateParts","activePartsArray","filter","p","isSameDay","querySelector","showDefaultButtons","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","mo","MutationObserver","ev","oldValue","classList","contains","focusWorkingDay","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getPreviousMonth","getNextYear","getNextMonth","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","parseMinParts","processMaxParts","max","parseMaxParts","initializeCalendarListener","months","startMonth","workingMonth","endMonth","needsiOSRubberBandFix","getIonMode","navigator","maxTouchPoints","writeTask","scrollLeft","clientWidth","isRTL","getChangedMonth","box","getBoundingClientRect","month","monthBox","Math","abs","x","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","valueToProcess","parseDate","warnIfValueOutOfBounds","singleValue","targetValue","clampDate","hour","minute","ampm","parseAmPm","didChangeMonth","bodyIsVisible","isGridStyle","showMonthAndYear","areAllSelectedDatesInSameMonth","firstMonth","animateToDate","_ref","_asyncToGenerator","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","prevMonth","nextMonth","_x","apply","arguments","onFocus","onBlur","scrollTo","top","left","offsetWidth","behavior","toggleMonthAndYearView","isTimePopoverOpen","color","name","disabled","isDateEnabled","cancelText","doneText","clearText","yearValues","monthValues","hourValues","minuteValues","locale","firstDayOfWeek","titleSelectedDatesFormatter","highlightedDates","showDefaultTitle","showClearButton","showDefaultTimeLabel","hourCycle","size","preferWheel","formatOptionsChanged","disabledChanged","emitStyle","minChanged","maxChanged","presentationChanged","yearValuesChanged","parsedYearValues","convertToArrayOfNumbers","monthValuesChanged","parsedMonthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","minuteValuesChanged","parsedMinuteValues","valueChanged","_this2","closeOverlay","_this3","isCalendarPicker","convertDataToISO","CONFIRM_ROLE","reset","startDate","_this4","cancel","_this5","CANCEL_ROLE","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","intersectionTrackerRef","visibleIO","IntersectionObserver","entries","isIntersecting","add","threshold","raf","hiddenIO","remove","getElementRoot","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","todayParts","getToday","getClosestValidDate","interactive","datetime","renderFooter","isButtonDisabled","clearButtonClick","h","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","activePart","monthsToRender","generateMonths","lastMonth","getNumDaysInMonth","result","getCombinedDateColumnData","items","itemObject","index","referenceParts","e","printIonError","todayString","onIonChange","detail","findPart","find","item","part","WHEEL_ITEM_PART","WHEEL_ITEM_ACTIVE_PART","text","getMonthColumnData","days","getDayColumnData","dayObject","valueNum","parseInt","years","getYearColumnData","showMonthFirst","isMonthFirstLocale","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","pickerColumnValue","userHasSelectedDate","hoursData","minutesData","dayPeriodData","getTimeColumnsData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","isLocaleDayPeriodRTL","order","calculateHourFromAMPM","dayPeriod","renderWheelView","columnOrder","renderCalendarHeader","mode","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","prevMonthDisabled","isPrevMonthDisabled","nextMonthDisabled","isNextMonthDisabled","hostDir","getAttribute","getMonthAndYear","icon","lazy","flipRtl","dir","slot","chevronBack","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","isDatetimeDisabled","swipeDisabled","isWorkingMonth","getDaysOfMonth","dateObject","dayOfWeek","isCalendarPadding","isActive","isToday","ariaLabel","ariaSelected","getCalendarDayState","generateDayAriaLabel","getDay","dateIsoString","isCalDayDisabled","isCalDayConstrained","dateStyle","dateParts","getHighlightStyles","dateStringWithoutTime","split","matchingHighlight","hd","textColor","backgroundColor","ref","tabindex","renderCalendarBody","renderCalendar","renderTimeLabel","renderTimeOverlay","_this6","computedHourCycle","getHourCycle","_ref2","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","_x2","getLocalizedTime","alignment","translucent","overlayIndex","arrow","onWillPresent","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","headerText","getLocalizedDateTime","weekday","renderHeader","showExpandedHeader","renderTime","renderCalendarViewMonthYearPicker","renderDatetime","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasWheelVariant","renderHiddenInput","formatValue","Host","createColorClasses","g","getElement","watchers","ios","md","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","Picker","didPresent","willPresent","willDismiss","didDismiss","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","delegateController","createDelegateController","lockController","createLockController","triggerController","createTriggerController","onBackdropTap","BACKDROP","dispatchCancelHandler","isCancel","cancelButton","buttons","b","callButtonHandler","presented","delegate","hasController","keyboardClose","enterAnimation","leaveAnimation","columns","cssClass","showBackdrop","backdropDismiss","animated","htmlAttributes","isOpen","trigger","onIsOpenChange","newValue","triggerChanged","addClickListener","prepareOverlay","removeClickListener","setOverlayId","_this7","unlock","lock","attachViewToDom","durationTimeout","data","_this8","dismissed","removeViewFromDom","onDidDismiss","eventMethod","getColumn","column","buttonClick","button","_this9","getSelected","_this10","safeCall","handler","selected","selectedColumn","selectedIndex","options","columnIndex","zIndex","i","getClassMap","onIonBackdropTap","onIonPickerWillDismiss","visible","tappable","buttonWrapperClass","type","buttonClass","c","PickerColumnCmp","ionPickerColChange","optHeight","rotateFactor","scaleFactor","velocity","y","noAnimate","colDidChange","colChanged","_this11","pickerRotateFactor","pickerScaleFactor","gesture","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","passive","onStart","onMove","onEnd","enable","tmrId","refresh","onDomChange","componentDidUpdate","rafId","cancelAnimationFrame","emitColChange","setSelected","update","saveY","optsEl","translateY","translateZ","prevSelected","indexForY","durationStr","scaleStr","children","opt","optOffset","transform","rotateX","transitionDuration","PICKER_OPT_SELECTED","lastIndex","hapticSelectionChanged","decelerate","DECELERATION_FRICTION","minY","maxY","round","hapticSelectionEnd","currentPos","event","cancelable","hapticSelectionStart","deltaY","pow","bounceFrom","clamp","MAX_PICKER_SPEED","velocityY","hasAttribute","TRANSITION_DURATION","isScrollingUp","optHeightFraction","forceRefresh","colEl","firstElementChild","clientHeight","align","columnWidth","prefix","width","prefixWidth","maxWidth","optionsWidth","o","suffix","suffixWidth"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, h, f as Host, i as getElement } from './index-28849c61.js';\nimport { startFocusVisible } from './focus-visible-dd40d69f.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot, j as clamp } from './helpers-da915de8.js';\nimport { a as printIonError, p as printIonWarning } from './index-9b0d46f4.js';\nimport { i as isRTL } from './dir-babeabeb.js';\nimport { c as createColorClasses, g as getClassMap } from './theme-01f3f29c.js';\nimport { c as chevronBack, o as chevronForward, l as chevronDown, p as caretUpSharp, q as caretDownSharp } from './index-e2cf2ceb.js';\nimport { b as getIonMode } from './ionic-global-c81d82ab.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as convertToArrayOfNumbers, u as convertDataToISO, x as getToday, y as getClosestValidDate, z as generateMonths, A as getNumDaysInMonth, B as getCombinedDateColumnData, C as getMonthColumnData, D as getDayColumnData, E as getYearColumnData, F as isMonthFirstLocale, G as getTimeColumnsData, H as isLocaleDayPeriodRTL, I as getDaysOfWeek, J as getMonthAndYear, K as getDaysOfMonth, L as getHourCycle, M as getLocalizedTime, N as getLocalizedDateTime, O as formatValue, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data-ae11fd43.js';\nimport { c as createLockController } from './lock-controller-316928be.js';\nimport { d as createDelegateController, e as createTriggerController, B as BACKDROP, i as isCancel, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod, s as safeCall } from './overlays-e7b9d6d9.js';\nimport { c as createAnimation } from './animation-eab5a4ca.js';\nimport { b as hapticSelectionChanged, h as hapticSelectionEnd, a as hapticSelectionStart } from './haptic-ac164e4c.js';\nimport './index-a5d50daf.js';\nimport './hardware-back-button-06ef3c3e.js';\nimport './framework-delegate-63d1a679.js';\nimport './gesture-controller-314a54f6.js';\nimport './capacitor-59395cbd.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n    if (minParts && minParts.year > refYear) {\n        return true;\n    }\n    if (maxParts && maxParts.year < refYear) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n    /**\n     * If this is a filler date (i.e. padding)\n     * then the date is disabled.\n     */\n    if (refParts.day === null) {\n        return true;\n    }\n    /**\n     * If user passed in a list of acceptable day values\n     * check to make sure that the date we are looking\n     * at is in this array.\n     */\n    if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n        return true;\n    }\n    /**\n     * Given a min date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year < the min allowed year?\n     * 2. Is the current year === min allowed year,\n     * but the current month < the min allowed month?\n     * 3. Is the current year === min allowed year, the\n     * current month === min allow month, but the current\n     * day < the min allowed day?\n     */\n    if (minParts && isBefore(refParts, minParts)) {\n        return true;\n    }\n    /**\n     * Given a max date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year > the max allowed year?\n     * 2. Is the current year === max allowed year,\n     * but the current month > the max allowed month?\n     * 3. Is the current year === max allowed year, the\n     * current month === max allow month, but the current\n     * day > the max allowed day?\n     */\n    if (maxParts && isAfter(refParts, maxParts)) {\n        return true;\n    }\n    /**\n     * If none of these checks\n     * passed then the date should\n     * be interactive.\n     */\n    return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n    /**\n     * activeParts signals what day(s) are currently selected in the datetime.\n     * If multiple=\"true\", this will be an array, but the logic in this util\n     * is the same whether we have one selected day or many because we're only\n     * calculating the state for one button. So, we treat a single activeParts value\n     * the same as an array of length one.\n     */\n    const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n    /**\n     * The day button is active if it is selected, or in other words, if refParts\n     * matches at least one selected date.\n     */\n    const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n    const isToday = isSameDay(refParts, todayParts);\n    const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n    /**\n     * Note that we always return one object regardless of whether activeParts\n     * was an array, since we pare down to one value for isActive.\n     */\n    return {\n        disabled,\n        isActive,\n        isToday,\n        ariaSelected: isActive ? 'true' : null,\n        ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n        text: refParts.day != null ? getDay(locale, refParts) : null,\n    };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n    // If the year is disabled then the month is disabled.\n    if (isYearDisabled(refParts.year, minParts, maxParts)) {\n        return true;\n    }\n    // If the date value is before the min date, then the month is disabled.\n    // If the date value is after the max date, then the month is disabled.\n    if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n        return true;\n    }\n    return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n    const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n    return isMonthDisabled(prevMonth, {\n        minParts,\n        maxParts,\n    });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n    const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n    return isMonthDisabled(nextMonth, {\n        maxParts,\n    });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n    if (Array.isArray(highlightedDates)) {\n        const dateStringWithoutTime = dateIsoString.split('T')[0];\n        const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n        if (matchingHighlight) {\n            return {\n                textColor: matchingHighlight.textColor,\n                backgroundColor: matchingHighlight.backgroundColor,\n            };\n        }\n    }\n    else {\n        /**\n         * Wrap in a try-catch to prevent exceptions in the user's function\n         * from interrupting the calendar's rendering.\n         */\n        try {\n            return highlightedDates(dateIsoString);\n        }\n        catch (e) {\n            printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n        }\n    }\n    return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n    var _a, _b, _c, _d;\n    if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) ||\n        ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) ||\n        ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) ||\n        ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n        printIonWarning('Datetime: \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n    }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n    // formatOptions is not required\n    if (!formatOptions)\n        return;\n    // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n    switch (presentation) {\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n            if (formatOptions.date === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires a date object in formatOptions.`, el);\n            }\n            break;\n        case 'time':\n            if (formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The 'time' presentation requires a time object in formatOptions.`, el);\n            }\n            break;\n        case 'date-time':\n        case 'time-date':\n            if (formatOptions.date === undefined && formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n            }\n            break;\n    }\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-light, #f4f5f8);--background-rgb:var(--ion-color-light-rgb, 244, 245, 248);--title-color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666))}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc));font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}.calendar-month-year-toggle{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0px;padding-bottom:0px;min-height:44px;font-size:min(1rem, 25.6px);font-weight:600}.calendar-month-year-toggle.ion-focused::after{opacity:0.15}.calendar-month-year-toggle #toggle-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:10px;margin-bottom:10px}:host .calendar-action-buttons .calendar-month-year-toggle ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, var(--ion-text-color-step-700, #b3b3b3));font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2);font-size:min(1.375rem, 35.2px)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, var(--ion-background-color-step-200, #cccccc))}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst IonDatetimeIosStyle0 = datetimeIosCss;\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-button{--background:transparent}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, var(--ion-background-color-step-300, #edeef0));color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons .calendar-month-year-toggle{color:var(--ion-color-base)}.calendar-month-year{min-width:0}.calendar-month-year-toggle{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;position:relative;border:0;outline:none;background:transparent;cursor:pointer;z-index:1}.calendar-month-year-toggle::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;-webkit-transition:opacity 15ms linear, background-color 15ms linear;transition:opacity 15ms linear, background-color 15ms linear;z-index:-1}.calendar-month-year-toggle.ion-focused::after{background:currentColor}.calendar-month-year-toggle:disabled{opacity:0.3;pointer-events:none}.calendar-month-year-toggle ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0;-ms-flex-negative:0;flex-shrink:0}.calendar-month-year-toggle #toggle-wrapper{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center}ion-picker{--highlight-background:var(--wheel-highlight-background);--highlight-border-radius:var(--wheel-highlight-border-radius);--fade-background-rgb:var(--wheel-fade-background-rgb)}:host{--background:var(--ion-color-step-100, var(--ion-background-color-step-100, #ffffff));--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}.calendar-month-year-toggle{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:12px;padding-bottom:12px;min-height:48px;background:transparent;color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959));z-index:1}.calendar-month-year-toggle.ion-focused::after{opacity:0.04}.calendar-month-year-toggle ion-ripple-effect{color:currentColor}@media (any-hover: hover){.calendar-month-year-toggle.ion-activatable:not(.ion-focused):hover::after{background:currentColor;opacity:0.04}}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, var(--ion-text-color-step-500, gray));font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, var(--ion-text-color-step-350, #595959))}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\nconst IonDatetimeMdStyle0 = datetimeMdCss;\n\nconst Datetime = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionRender = createEvent(this, \"ionRender\", 7);\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.prevPresentation = null;\n        this.warnIfIncorrectValueUsage = () => {\n            const { multiple, value } = this;\n            if (!multiple && Array.isArray(value)) {\n                /**\n                 * We do some processing on the `value` array so\n                 * that it looks more like an array when logged to\n                 * the console.\n                 * Example given ['a', 'b']\n                 * Default toString() behavior: a,b\n                 * Custom behavior: ['a', 'b']\n                 */\n                printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n            }\n        };\n        this.setValue = (value) => {\n            this.value = value;\n            this.ionChange.emit({ value });\n        };\n        /**\n         * Returns the DatetimePart interface\n         * to use when rendering an initial set of\n         * data. This should be used when rendering an\n         * interface in an environment where the `value`\n         * may not be set. This function works\n         * by returning the first selected date and then\n         * falling back to defaultParts if no active date\n         * is selected.\n         */\n        this.getActivePartsWithFallback = () => {\n            var _a;\n            const { defaultParts } = this;\n            return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n        };\n        this.getActivePart = () => {\n            const { activeParts } = this;\n            return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n        };\n        this.closeParentOverlay = (role) => {\n            const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n            if (popoverOrModal) {\n                popoverOrModal.dismiss(undefined, role);\n            }\n        };\n        this.setWorkingParts = (parts) => {\n            this.workingParts = Object.assign({}, parts);\n        };\n        this.setActiveParts = (parts, removeDate = false) => {\n            /** if the datetime component is in readonly mode,\n             * allow browsing of the calendar without changing\n             * the set value\n             */\n            if (this.readonly) {\n                return;\n            }\n            const { multiple, minParts, maxParts, activeParts } = this;\n            /**\n             * When setting the active parts, it is possible\n             * to set invalid data. For example,\n             * when updating January 31 to February,\n             * February 31 does not exist. As a result\n             * we need to validate the active parts and\n             * ensure that we are only setting valid dates.\n             * Additionally, we need to update the working parts\n             * too in the event that the validated parts are different.\n             */\n            const validatedParts = validateParts(parts, minParts, maxParts);\n            this.setWorkingParts(validatedParts);\n            if (multiple) {\n                const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n                if (removeDate) {\n                    this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n                }\n                else {\n                    this.activeParts = [...activePartsArray, validatedParts];\n                }\n            }\n            else {\n                this.activeParts = Object.assign({}, validatedParts);\n            }\n            const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n            if (hasSlottedButtons || this.showDefaultButtons) {\n                return;\n            }\n            this.confirm();\n        };\n        this.initializeKeyboardListeners = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const root = this.el.shadowRoot;\n            /**\n             * Get a reference to the month\n             * element we are currently viewing.\n             */\n            const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n            /**\n             * When focusing the calendar body, we want to pass focus\n             * to the working day, but other days should\n             * only be accessible using the arrow keys. Pressing\n             * Tab should jump between bodies of selectable content.\n             */\n            const checkCalendarBodyFocus = (ev) => {\n                var _a;\n                const record = ev[0];\n                /**\n                 * If calendar body was already focused\n                 * when this fired or if the calendar body\n                 * if not currently focused, we should not re-focus\n                 * the inner day.\n                 */\n                if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n                    return;\n                }\n                this.focusWorkingDay(currentMonth);\n            };\n            const mo = new MutationObserver(checkCalendarBodyFocus);\n            mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n            this.destroyKeyboardMO = () => {\n                mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            };\n            /**\n             * We must use keydown not keyup as we want\n             * to prevent scrolling when using the arrow keys.\n             */\n            calendarBodyRef.addEventListener('keydown', (ev) => {\n                const activeElement = root.activeElement;\n                if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n                    return;\n                }\n                const parts = getPartsFromCalendarDay(activeElement);\n                let partsToFocus;\n                switch (ev.key) {\n                    case 'ArrowDown':\n                        ev.preventDefault();\n                        partsToFocus = getNextWeek(parts);\n                        break;\n                    case 'ArrowUp':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousWeek(parts);\n                        break;\n                    case 'ArrowRight':\n                        ev.preventDefault();\n                        partsToFocus = getNextDay(parts);\n                        break;\n                    case 'ArrowLeft':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousDay(parts);\n                        break;\n                    case 'Home':\n                        ev.preventDefault();\n                        partsToFocus = getStartOfWeek(parts);\n                        break;\n                    case 'End':\n                        ev.preventDefault();\n                        partsToFocus = getEndOfWeek(parts);\n                        break;\n                    case 'PageUp':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n                        break;\n                    case 'PageDown':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n                        break;\n                    /**\n                     * Do not preventDefault here\n                     * as we do not want to override other\n                     * browser defaults such as pressing Enter/Space\n                     * to select a day.\n                     */\n                    default:\n                        return;\n                }\n                /**\n                 * If the day we want to move focus to is\n                 * disabled, do not do anything.\n                 */\n                if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n                    return;\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n                /**\n                 * Give view a chance to re-render\n                 * then move focus to the new working day\n                 */\n                requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n            });\n        };\n        this.focusWorkingDay = (currentMonth) => {\n            /**\n             * Get the number of padding days so\n             * we know how much to offset our next selector by\n             * to grab the correct calendar-day element.\n             */\n            const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n            const { day } = this.workingParts;\n            if (day === null) {\n                return;\n            }\n            /**\n             * Get the calendar day element\n             * and focus it.\n             */\n            const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n            if (dayEl) {\n                dayEl.focus();\n            }\n        };\n        this.processMinParts = () => {\n            const { min, defaultParts } = this;\n            if (min === undefined) {\n                this.minParts = undefined;\n                return;\n            }\n            this.minParts = parseMinParts(min, defaultParts);\n        };\n        this.processMaxParts = () => {\n            const { max, defaultParts } = this;\n            if (max === undefined) {\n                this.maxParts = undefined;\n                return;\n            }\n            this.maxParts = parseMaxParts(max, defaultParts);\n        };\n        this.initializeCalendarListener = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            /**\n             * For performance reasons, we only render 3\n             * months at a time: The current month, the previous\n             * month, and the next month. We have a scroll listener\n             * on the calendar body to append/prepend new months.\n             *\n             * We can do this because Stencil is smart enough to not\n             * re-create the .calendar-month containers, but rather\n             * update the content within those containers.\n             *\n             * As an added bonus, WebKit has some troubles with\n             * scroll-snap-stop: always, so not rendering all of\n             * the months in a row allows us to mostly sidestep\n             * that issue.\n             */\n            const months = calendarBodyRef.querySelectorAll('.calendar-month');\n            const startMonth = months[0];\n            const workingMonth = months[1];\n            const endMonth = months[2];\n            const mode = getIonMode(this);\n            const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n            /**\n             * Before setting up the scroll listener,\n             * scroll the middle month into view.\n             * scrollIntoView() will scroll entire page\n             * if element is not in viewport. Use scrollLeft instead.\n             */\n            writeTask(() => {\n                calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                const getChangedMonth = (parts) => {\n                    const box = calendarBodyRef.getBoundingClientRect();\n                    /**\n                     * If the current scroll position is all the way to the left\n                     * then we have scrolled to the previous month.\n                     * Otherwise, assume that we have scrolled to the next\n                     * month. We have a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     *\n                     * Check below the next line ensures that we did not\n                     * swipe and abort (i.e. we swiped but we are still on the current month).\n                     */\n                    const condition = isRTL(this.el) ? calendarBodyRef.scrollLeft >= -2 : calendarBodyRef.scrollLeft <= 2;\n                    const month = condition ? startMonth : endMonth;\n                    /**\n                     * The edge of the month must be lined up with\n                     * the edge of the calendar body in order for\n                     * the component to update. Otherwise, it\n                     * may be the case that the user has paused their\n                     * swipe or the browser has not finished snapping yet.\n                     * Rather than check if the x values are equal,\n                     * we give it a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     */\n                    const monthBox = month.getBoundingClientRect();\n                    if (Math.abs(monthBox.x - box.x) > 2)\n                        return;\n                    /**\n                     * If we're force-rendering a month, assume we've\n                     * scrolled to that and return it.\n                     *\n                     * If forceRenderDate is ever used in a context where the\n                     * forced month is not immediately auto-scrolled to, this\n                     * should be updated to also check whether `month` has the\n                     * same month and year as the forced date.\n                     */\n                    const { forceRenderDate } = this;\n                    if (forceRenderDate !== undefined) {\n                        return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n                    }\n                    /**\n                     * From here, we can determine if the start\n                     * month or the end month was scrolled into view.\n                     * If no month was changed, then we can return from\n                     * the scroll callback early.\n                     */\n                    if (month === startMonth) {\n                        return getPreviousMonth(parts);\n                    }\n                    else if (month === endMonth) {\n                        return getNextMonth(parts);\n                    }\n                    else {\n                        return;\n                    }\n                };\n                const updateActiveMonth = () => {\n                    if (needsiOSRubberBandFix) {\n                        calendarBodyRef.style.removeProperty('pointer-events');\n                        appliediOSRubberBandFix = false;\n                    }\n                    /**\n                     * If the month did not change\n                     * then we can return early.\n                     */\n                    const newDate = getChangedMonth(this.workingParts);\n                    if (!newDate)\n                        return;\n                    const { month, day, year } = newDate;\n                    if (isMonthDisabled({ month, year, day: null }, {\n                        minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                        maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n                    })) {\n                        return;\n                    }\n                    /**\n                     * Prevent scrolling for other browsers\n                     * to give the DOM time to update and the container\n                     * time to properly snap.\n                     */\n                    calendarBodyRef.style.setProperty('overflow', 'hidden');\n                    /**\n                     * Use a writeTask here to ensure\n                     * that the state is updated and the\n                     * correct month is scrolled into view\n                     * in the same frame. This is not\n                     * typically a problem on newer devices\n                     * but older/slower device may have a flicker\n                     * if we did not do this.\n                     */\n                    writeTask(() => {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n                        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                        calendarBodyRef.style.removeProperty('overflow');\n                        if (this.resolveForceDateScrolling) {\n                            this.resolveForceDateScrolling();\n                        }\n                    });\n                };\n                /**\n                 * When the container finishes scrolling we\n                 * need to update the DOM with the selected month.\n                 */\n                let scrollTimeout;\n                /**\n                 * We do not want to attempt to set pointer-events\n                 * multiple times within a single swipe gesture as\n                 * that adds unnecessary work to the main thread.\n                 */\n                let appliediOSRubberBandFix = false;\n                const scrollCallback = () => {\n                    if (scrollTimeout) {\n                        clearTimeout(scrollTimeout);\n                    }\n                    /**\n                     * On iOS it is possible to quickly rubber band\n                     * the scroll area before the scroll timeout has fired.\n                     * This results in users reaching the end of the scrollable\n                     * container before the DOM has updated.\n                     * By setting `pointer-events: none` we can ensure that\n                     * subsequent swipes do not happen while the container\n                     * is snapping.\n                     */\n                    if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n                        calendarBodyRef.style.setProperty('pointer-events', 'none');\n                        appliediOSRubberBandFix = true;\n                    }\n                    // Wait ~3 frames\n                    scrollTimeout = setTimeout(updateActiveMonth, 50);\n                };\n                calendarBodyRef.addEventListener('scroll', scrollCallback);\n                this.destroyCalendarListener = () => {\n                    calendarBodyRef.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Clean up all listeners except for the overlay\n         * listener. This is so that we can re-create the listeners\n         * if the datetime has been hidden/presented by a modal or popover.\n         */\n        this.destroyInteractionListeners = () => {\n            const { destroyCalendarListener, destroyKeyboardMO } = this;\n            if (destroyCalendarListener !== undefined) {\n                destroyCalendarListener();\n            }\n            if (destroyKeyboardMO !== undefined) {\n                destroyKeyboardMO();\n            }\n        };\n        this.processValue = (value) => {\n            const hasValue = value !== null && value !== undefined && value !== '' && (!Array.isArray(value) || value.length > 0);\n            const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n            const { minParts, maxParts, workingParts, el } = this;\n            this.warnIfIncorrectValueUsage();\n            /**\n             * Return early if the value wasn't parsed correctly, such as\n             * if an improperly formatted date string was provided.\n             */\n            if (!valueToProcess) {\n                return;\n            }\n            /**\n             * Datetime should only warn of out of bounds values\n             * if set by the user. If the `value` is undefined,\n             * we will default to today's date which may be out\n             * of bounds. In this case, the warning makes it look\n             * like the developer did something wrong which is\n             * not true.\n             */\n            if (hasValue) {\n                warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n            }\n            /**\n             * If there are multiple values, pick an arbitrary one to clamp to. This way,\n             * if the values are across months, we always show at least one of them. Note\n             * that the values don't necessarily have to be in order.\n             */\n            const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n            const targetValue = clampDate(singleValue, minParts, maxParts);\n            const { month, day, year, hour, minute } = targetValue;\n            const ampm = parseAmPm(hour);\n            /**\n             * Since `activeParts` indicates a value that\n             * been explicitly selected either by the\n             * user or the app, only update `activeParts`\n             * if the `value` property is set.\n             */\n            if (hasValue) {\n                if (Array.isArray(valueToProcess)) {\n                    this.activeParts = [...valueToProcess];\n                }\n                else {\n                    this.activeParts = {\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    };\n                }\n            }\n            else {\n                /**\n                 * Reset the active parts if the value is not set.\n                 * This will clear the selected calendar day when\n                 * performing a clear action or using the reset() method.\n                 */\n                this.activeParts = [];\n            }\n            /**\n             * Only animate if:\n             * 1. We're using grid style (wheel style pickers should just jump to new value)\n             * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n             * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n             * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n             */\n            const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n            const bodyIsVisible = el.classList.contains('datetime-ready');\n            const { isGridStyle, showMonthAndYear } = this;\n            let areAllSelectedDatesInSameMonth = true;\n            if (Array.isArray(valueToProcess)) {\n                const firstMonth = valueToProcess[0].month;\n                for (const date of valueToProcess) {\n                    if (date.month !== firstMonth) {\n                        areAllSelectedDatesInSameMonth = false;\n                        break;\n                    }\n                }\n            }\n            /**\n             * If there is more than one date selected\n             * and the dates aren't all in the same month,\n             * then we should neither animate to the date\n             * nor update the working parts because we do\n             * not know which date the user wants to view.\n             */\n            if (areAllSelectedDatesInSameMonth) {\n                if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n                    this.animateToDate(targetValue);\n                }\n                else {\n                    /**\n                     * We only need to do this if we didn't just animate to a new month,\n                     * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n                     */\n                    this.setWorkingParts({\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    });\n                }\n            }\n        };\n        this.animateToDate = async (targetValue) => {\n            const { workingParts } = this;\n            /**\n             * Tell other render functions that we need to force the\n             * target month to appear in place of the actual next/prev month.\n             * Because this is a State variable, a rerender will be triggered\n             * automatically, updating the rendered months.\n             */\n            this.forceRenderDate = targetValue;\n            /**\n             * Flag that we've started scrolling to the forced date.\n             * The resolve function will be called by the datetime's\n             * scroll listener when it's done updating everything.\n             * This is a replacement for making prev/nextMonth async,\n             * since the logic we're waiting on is in a listener.\n             */\n            const forceDateScrollingPromise = new Promise((resolve) => {\n                this.resolveForceDateScrolling = resolve;\n            });\n            /**\n             * Animate smoothly to the forced month. This will also update\n             * workingParts and correct the surrounding months for us.\n             */\n            const targetMonthIsBefore = isBefore(targetValue, workingParts);\n            targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n            await forceDateScrollingPromise;\n            this.resolveForceDateScrolling = undefined;\n            this.forceRenderDate = undefined;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.hasValue = () => {\n            return this.value != null;\n        };\n        this.nextMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n            if (!nextMonth) {\n                return;\n            }\n            const left = nextMonth.offsetWidth * 2;\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: left * (isRTL(this.el) ? -1 : 1),\n                behavior: 'smooth',\n            });\n        };\n        this.prevMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n            if (!prevMonth) {\n                return;\n            }\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            });\n        };\n        this.toggleMonthAndYearView = () => {\n            this.showMonthAndYear = !this.showMonthAndYear;\n        };\n        this.showMonthAndYear = false;\n        this.activeParts = [];\n        this.workingParts = {\n            month: 5,\n            day: 28,\n            year: 2021,\n            hour: 13,\n            minute: 52,\n            ampm: 'pm',\n        };\n        this.isTimePopoverOpen = false;\n        this.forceRenderDate = undefined;\n        this.color = 'primary';\n        this.name = this.inputId;\n        this.disabled = false;\n        this.formatOptions = undefined;\n        this.readonly = false;\n        this.isDateEnabled = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this.presentation = 'date-time';\n        this.cancelText = 'Cancel';\n        this.doneText = 'Done';\n        this.clearText = 'Clear';\n        this.yearValues = undefined;\n        this.monthValues = undefined;\n        this.dayValues = undefined;\n        this.hourValues = undefined;\n        this.minuteValues = undefined;\n        this.locale = 'default';\n        this.firstDayOfWeek = 0;\n        this.titleSelectedDatesFormatter = undefined;\n        this.multiple = false;\n        this.highlightedDates = undefined;\n        this.value = undefined;\n        this.showDefaultTitle = false;\n        this.showDefaultButtons = false;\n        this.showClearButton = false;\n        this.showDefaultTimeLabel = true;\n        this.hourCycle = undefined;\n        this.size = 'fixed';\n        this.preferWheel = false;\n    }\n    formatOptionsChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n        warnIfTimeZoneProvided(el, formatOptions);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    minChanged() {\n        this.processMinParts();\n    }\n    maxChanged() {\n        this.processMaxParts();\n    }\n    presentationChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    }\n    get isGridStyle() {\n        const { presentation, preferWheel } = this;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        return hasDatePresentation && !preferWheel;\n    }\n    yearValuesChanged() {\n        this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n    monthValuesChanged() {\n        this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n    dayValuesChanged() {\n        this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n    hourValuesChanged() {\n        this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n    minuteValuesChanged() {\n        this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    async valueChanged() {\n        const { value } = this;\n        if (this.hasValue()) {\n            this.processValue(value);\n        }\n        this.emitStyle();\n        this.ionValueChange.emit({ value });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n    async confirm(closeOverlay = false) {\n        const { isCalendarPicker, activeParts, preferWheel, workingParts } = this;\n        /**\n         * We only update the value if the presentation is not a calendar picker.\n         */\n        if (activeParts !== undefined || !isCalendarPicker) {\n            const activePartsIsArray = Array.isArray(activeParts);\n            if (activePartsIsArray && activeParts.length === 0) {\n                if (preferWheel) {\n                    /**\n                     * If the datetime is using a wheel picker, but the\n                     * active parts are empty, then the user has confirmed the\n                     * initial value (working parts) presented to them.\n                     */\n                    this.setValue(convertDataToISO(workingParts));\n                }\n                else {\n                    this.setValue(undefined);\n                }\n            }\n            else {\n                this.setValue(convertDataToISO(activeParts));\n            }\n        }\n        if (closeOverlay) {\n            this.closeParentOverlay(CONFIRM_ROLE);\n        }\n    }\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n    async reset(startDate) {\n        this.processValue(startDate);\n    }\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n    async cancel(closeOverlay = false) {\n        this.ionCancel.emit();\n        if (closeOverlay) {\n            this.closeParentOverlay(CANCEL_ROLE);\n        }\n    }\n    get isCalendarPicker() {\n        const { presentation } = this;\n        return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n    connectedCallback() {\n        this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n    disconnectedCallback() {\n        if (this.clearFocusVisible) {\n            this.clearFocusVisible();\n            this.clearFocusVisible = undefined;\n        }\n    }\n    initializeListeners() {\n        this.initializeCalendarListener();\n        this.initializeKeyboardListeners();\n    }\n    componentDidLoad() {\n        const { el, intersectionTrackerRef } = this;\n        /**\n         * If a scrollable element is hidden using `display: none`,\n         * it will not have a scroll height meaning we cannot scroll elements\n         * into view. As a result, we will need to wait for the datetime to become\n         * visible if used inside of a modal or a popover otherwise the scrollable\n         * areas will not have the correct values snapped into place.\n         */\n        const visibleCallback = (entries) => {\n            const ev = entries[0];\n            if (!ev.isIntersecting) {\n                return;\n            }\n            this.initializeListeners();\n            /**\n             * TODO FW-2793: Datetime needs a frame to ensure that it\n             * can properly scroll contents into view. As a result\n             * we hide the scrollable content until after that frame\n             * so users do not see the content quickly shifting. The downside\n             * is that the content will pop into view a frame after. Maybe there\n             * is a better way to handle this?\n             */\n            writeTask(() => {\n                this.el.classList.add('datetime-ready');\n            });\n        };\n        const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01, root: el });\n        /**\n         * Use raf to avoid a race condition between the component loading and\n         * its display animation starting (such as when shown in a modal). This\n         * could cause the datetime to start at a visibility of 0, erroneously\n         * triggering the `hiddenIO` observer below.\n         */\n        raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n        /**\n         * We need to clean up listeners when the datetime is hidden\n         * in a popover/modal so that we can properly scroll containers\n         * back into view if they are re-presented. When the datetime is hidden\n         * the scroll areas have scroll widths/heights of 0px, so any snapping\n         * we did originally has been lost.\n         */\n        const hiddenCallback = (entries) => {\n            const ev = entries[0];\n            if (ev.isIntersecting) {\n                return;\n            }\n            this.destroyInteractionListeners();\n            /**\n             * When datetime is hidden, we need to make sure that\n             * the month/year picker is closed. Otherwise,\n             * it will be open when the datetime re-appears\n             * and the scroll area of the calendar grid will be 0.\n             * As a result, the wrong month will be shown.\n             */\n            this.showMonthAndYear = false;\n            writeTask(() => {\n                this.el.classList.remove('datetime-ready');\n            });\n        };\n        const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0, root: el });\n        raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n        /**\n         * Datetime uses Ionic components that emit\n         * ionFocus and ionBlur. These events are\n         * composed meaning they will cross\n         * the shadow dom boundary. We need to\n         * stop propagation on these events otherwise\n         * developers will see 2 ionFocus or 2 ionBlur\n         * events at a time.\n         */\n        const root = getElementRoot(this.el);\n        root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n        root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n    componentDidRender() {\n        const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel, forceRenderDate } = this;\n        /**\n         * TODO(FW-2165)\n         * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n         * When using `min`, we add `scroll-snap-align: none`\n         * to the disabled month so that users cannot scroll to it.\n         * This triggers a bug in WebKit where the scroll position is reset.\n         * Since the month change logic is handled by a scroll listener,\n         * this causes the month to change leading to `scroll-snap-align`\n         * changing again, thus changing the scroll position again and causing\n         * an infinite loop.\n         * This issue only applies to the calendar grid, so we can disable\n         * it if the calendar grid is not being used.\n         */\n        const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n        if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n            const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n            /**\n             * We need to make sure the datetime is not in the process\n             * of scrolling to a new datetime value if the value\n             * is updated programmatically.\n             * Otherwise, the datetime will appear to not scroll at all because\n             * we are resetting the scroll position to the center of the view.\n             * Prior to the datetime's value being updated programmatically,\n             * the calendarBodyRef is scrolled such that the middle month is centered\n             * in the view. The below code updates the scroll position so the middle\n             * month is also centered in the view. Since the scroll position did not change,\n             * the scroll callback in this file does not fire,\n             * and the resolveForceDateScrolling promise never resolves.\n             */\n            if (workingMonth && forceRenderDate === undefined) {\n                calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            }\n        }\n        if (prevPresentation === null) {\n            this.prevPresentation = presentation;\n            return;\n        }\n        if (presentation === prevPresentation) {\n            return;\n        }\n        this.prevPresentation = presentation;\n        this.destroyInteractionListeners();\n        this.initializeListeners();\n        /**\n         * The month/year picker from the date interface\n         * should be closed as it is not available in non-date\n         * interfaces.\n         */\n        this.showMonthAndYear = false;\n        raf(() => {\n            this.ionRender.emit();\n        });\n    }\n    componentWillLoad() {\n        const { el, formatOptions, highlightedDates, multiple, presentation, preferWheel } = this;\n        if (multiple) {\n            if (presentation !== 'date') {\n                printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n            }\n            if (preferWheel) {\n                printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (highlightedDates !== undefined) {\n            if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n                printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n            }\n            if (preferWheel) {\n                printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (formatOptions) {\n            checkForPresentationFormatMismatch(el, presentation, formatOptions);\n            warnIfTimeZoneProvided(el, formatOptions);\n        }\n        const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n        const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n        const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n        const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n        const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n        const todayParts = (this.todayParts = parseDate(getToday()));\n        this.processMinParts();\n        this.processMaxParts();\n        this.defaultParts = getClosestValidDate({\n            refParts: todayParts,\n            monthValues,\n            dayValues,\n            yearValues,\n            hourValues,\n            minuteValues,\n            minParts: this.minParts,\n            maxParts: this.maxParts,\n        });\n        this.processValue(this.value);\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            interactive: true,\n            datetime: true,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n    renderFooter() {\n        const { disabled, readonly, showDefaultButtons, showClearButton } = this;\n        /**\n         * The cancel, clear, and confirm buttons\n         * should not be interactive if the datetime\n         * is disabled or readonly.\n         */\n        const isButtonDisabled = disabled || readonly;\n        const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n        if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n            return;\n        }\n        const clearButtonClick = () => {\n            this.reset();\n            this.setValue(undefined);\n        };\n        /**\n         * By default we render two buttons:\n         * Cancel - Dismisses the datetime and\n         * does not update the `value` prop.\n         * OK - Dismisses the datetime and\n         * updates the `value` prop.\n         */\n        return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n                ['datetime-action-buttons']: true,\n                ['has-clear-button']: this.showClearButton,\n            } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true), disabled: isButtonDisabled }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick(), disabled: isButtonDisabled }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true), disabled: isButtonDisabled }, this.doneText)))))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n    renderWheelPicker(forcePresentation = this.presentation) {\n        /**\n         * If presentation=\"time-date\" we switch the\n         * order of the render array here instead of\n         * manually reordering each date/time picker\n         * column with CSS. This allows for additional\n         * flexibility if we need to render subsets\n         * of the date/time data or do additional ordering\n         * within the child render functions.\n         */\n        const renderArray = forcePresentation === 'time-date'\n            ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n            : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n        return h(\"ion-picker\", null, renderArray);\n    }\n    renderDatePickerColumns(forcePresentation) {\n        return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n            ? this.renderCombinedDatePickerColumn()\n            : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n    renderCombinedDatePickerColumn() {\n        const { defaultParts, disabled, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n        const activePart = this.getActivePartsWithFallback();\n        /**\n         * By default, generate a range of 3 months:\n         * Previous month, current month, and next month\n         */\n        const monthsToRender = generateMonths(workingParts);\n        const lastMonth = monthsToRender[monthsToRender.length - 1];\n        /**\n         * Ensure that users can select the entire window of dates.\n         */\n        monthsToRender[0].day = 1;\n        lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n        /**\n         * Narrow the dates rendered based on min/max dates (if any).\n         * The `min` date is used if the min is after the generated min month.\n         * The `max` date is used if the max is before the generated max month.\n         * This ensures that the sliding window always stays at 3 months\n         * but still allows future dates to be lazily rendered based on any min/max\n         * constraints.\n         */\n        const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n        const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n        const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n        let items = result.items;\n        const parts = result.parts;\n        if (isDateEnabled) {\n            items = items.map((itemObject, index) => {\n                const referenceParts = parts[index];\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, itemObject), { disabled });\n            });\n        }\n        /**\n         * If we have selected a day already, then default the column\n         * to that value. Otherwise, set it to the default date.\n         */\n        const todayString = workingParts.day !== null\n            ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n            : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a date\", class: \"date-column\", color: this.color, disabled: disabled, value: todayString, onIonChange: (ev) => {\n                const { value } = ev.detail;\n                const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n                ev.stopPropagation();\n            } }, items.map((item) => (h(\"ion-picker-column-option\", { part: item.value === todayString ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: item.value, disabled: item.disabled, value: item.value }, item.text)))));\n    }\n    renderIndividualDatePickerColumns(forcePresentation) {\n        const { workingParts, isDateEnabled } = this;\n        const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n        const months = shouldRenderMonths\n            ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n            : [];\n        const shouldRenderDays = forcePresentation === 'date';\n        let days = shouldRenderDays\n            ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n            : [];\n        if (isDateEnabled) {\n            days = days.map((dayObject) => {\n                const { value } = dayObject;\n                const valueNum = typeof value === 'string' ? parseInt(value) : value;\n                const referenceParts = {\n                    month: workingParts.month,\n                    day: valueNum,\n                    year: workingParts.year,\n                };\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, dayObject), { disabled });\n            });\n        }\n        const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n        const years = shouldRenderYears\n            ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n            : [];\n        /**\n         * Certain locales show the day before the month.\n         */\n        const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n        let renderArray = [];\n        if (showMonthFirst) {\n            renderArray = [\n                this.renderMonthPickerColumn(months),\n                this.renderDayPickerColumn(days),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        else {\n            renderArray = [\n                this.renderDayPickerColumn(days),\n                this.renderMonthPickerColumn(months),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        return renderArray;\n    }\n    renderDayPickerColumn(days) {\n        var _a;\n        if (days.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        const pickerColumnValue = (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined;\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day\", class: \"day-column\", color: this.color, disabled: disabled, value: pickerColumnValue, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n                ev.stopPropagation();\n            } }, days.map((day) => (h(\"ion-picker-column-option\", { part: day.value === pickerColumnValue ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: day.value, disabled: day.disabled, value: day.value }, day.text)))));\n    }\n    renderMonthPickerColumn(months) {\n        if (months.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a month\", class: \"month-column\", color: this.color, disabled: disabled, value: workingParts.month, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n                ev.stopPropagation();\n            } }, months.map((month) => (h(\"ion-picker-column-option\", { part: month.value === workingParts.month ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: month.value, disabled: month.disabled, value: month.value }, month.text)))));\n    }\n    renderYearPickerColumn(years) {\n        if (years.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a year\", class: \"year-column\", color: this.color, disabled: disabled, value: workingParts.year, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n                ev.stopPropagation();\n            } }, years.map((year) => (h(\"ion-picker-column-option\", { part: year.value === workingParts.year ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: year.value, disabled: year.disabled, value: year.value }, year.text)))));\n    }\n    renderTimePickerColumns(forcePresentation) {\n        if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n            return [];\n        }\n        /**\n         * If a user has not selected a date,\n         * then we should show all times. If the\n         * user has selected a date (even if it has\n         * not been confirmed yet), we should apply\n         * the max and min restrictions so that the\n         * time picker shows values that are\n         * appropriate for the selected date.\n         */\n        const activePart = this.getActivePart();\n        const userHasSelectedDate = activePart !== undefined;\n        const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n        return [\n            this.renderHourPickerColumn(hoursData),\n            this.renderMinutePickerColumn(minutesData),\n            this.renderDayPeriodPickerColumn(dayPeriodData),\n        ];\n    }\n    renderHourPickerColumn(hoursData) {\n        const { disabled, workingParts } = this;\n        if (hoursData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select an hour\", color: this.color, disabled: disabled, value: activePart.hour, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n                ev.stopPropagation();\n            } }, hoursData.map((hour) => (h(\"ion-picker-column-option\", { part: hour.value === activePart.hour ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: hour.value, disabled: hour.disabled, value: hour.value }, hour.text)))));\n    }\n    renderMinutePickerColumn(minutesData) {\n        const { disabled, workingParts } = this;\n        if (minutesData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a minute\", color: this.color, disabled: disabled, value: activePart.minute, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n                ev.stopPropagation();\n            } }, minutesData.map((minute) => (h(\"ion-picker-column-option\", { part: minute.value === activePart.minute ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: minute.value, disabled: minute.disabled, value: minute.value }, minute.text)))));\n    }\n    renderDayPeriodPickerColumn(dayPeriodData) {\n        const { disabled, workingParts } = this;\n        if (dayPeriodData.length === 0) {\n            return [];\n        }\n        const activePart = this.getActivePartsWithFallback();\n        const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n        return (h(\"ion-picker-column\", { \"aria-label\": \"Select a day period\", style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, disabled: disabled, value: activePart.ampm, onIonChange: (ev) => {\n                const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n                ev.stopPropagation();\n            } }, dayPeriodData.map((dayPeriod) => (h(\"ion-picker-column-option\", { part: dayPeriod.value === activePart.ampm ? `${WHEEL_ITEM_PART} ${WHEEL_ITEM_ACTIVE_PART}` : WHEEL_ITEM_PART, key: dayPeriod.value, disabled: dayPeriod.disabled, value: dayPeriod.value }, dayPeriod.text)))));\n    }\n    renderWheelView(forcePresentation) {\n        const { locale } = this;\n        const showMonthFirst = isMonthFirstLocale(locale);\n        const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n        return (h(\"div\", { class: {\n                [`wheel-order-${columnOrder}`]: true,\n            } }, this.renderWheelPicker(forcePresentation)));\n    }\n    /**\n     * Grid Render Methods\n     */\n    renderCalendarHeader(mode) {\n        const { disabled } = this;\n        const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n        const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n        const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n        const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n        // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n        const hostDir = this.el.getAttribute('dir') || undefined;\n        return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"button\", { class: {\n                'calendar-month-year-toggle': true,\n                'ion-activatable': true,\n                'ion-focusable': true,\n            }, part: \"month-year-button\", disabled: disabled, \"aria-label\": this.showMonthAndYear ? 'Hide year picker' : 'Show year picker', onClick: () => this.toggleMonthAndYearView() }, h(\"span\", { id: \"toggle-wrapper\" }, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })), mode === 'md' && h(\"ion-ripple-effect\", null))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n            return h(\"div\", { class: \"day-of-week\" }, d);\n        }))));\n    }\n    renderMonth(month, year) {\n        const { disabled, readonly } = this;\n        const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n        const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n        const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n        const isDatetimeDisabled = disabled || readonly;\n        const swipeDisabled = disabled ||\n            isMonthDisabled({\n                month,\n                year,\n                day: null,\n            }, {\n                // The day is not used when checking if a month is disabled.\n                // Users should be able to access the min or max month, even if the\n                // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n                minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n            });\n        // The working month should never have swipe disabled.\n        // Otherwise the CSS scroll snap will not work and the user\n        // can free-scroll the calendar.\n        const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n                'calendar-month': true,\n                // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n                'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n            } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n            const { day, dayOfWeek } = dateObject;\n            const { el, highlightedDates, isDateEnabled, multiple } = this;\n            const referenceParts = { month, day, year };\n            const isCalendarPadding = day === null;\n            const { isActive, isToday, ariaLabel, ariaSelected, disabled: isDayDisabled, text, } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n            const dateIsoString = convertDataToISO(referenceParts);\n            let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n            if (!isCalDayDisabled && isDateEnabled !== undefined) {\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    isCalDayDisabled = !isDateEnabled(dateIsoString);\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n                }\n            }\n            /**\n             * Some days are constrained through max & min or allowed dates\n             * and also disabled because the component is readonly or disabled.\n             * These need to be displayed differently.\n             */\n            const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n            const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n            let dateStyle = undefined;\n            /**\n             * Custom highlight styles should not override the style for selected dates,\n             * nor apply to \"filler days\" at the start of the grid.\n             */\n            if (highlightedDates !== undefined && !isActive && day !== null) {\n                dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n            }\n            let dateParts = undefined;\n            // \"Filler days\" at the beginning of the grid should not get the calendar day\n            // CSS parts added to them\n            if (!isCalendarPadding) {\n                dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n                // We need to use !important for the inline styles here because\n                // otherwise the CSS shadow parts will override these styles.\n                // See https://github.com/WICG/webcomponents/issues/847\n                // Both the CSS shadow parts and highlightedDates styles are\n                // provided by the developer, but highlightedDates styles should\n                // always take priority.\n                ref: (el) => {\n                    if (el) {\n                        el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n                        el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n                    }\n                }, tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isButtonDisabled, class: {\n                    'calendar-day-padding': isCalendarPadding,\n                    'calendar-day': true,\n                    'calendar-day-active': isActive,\n                    'calendar-day-constrained': isCalDayConstrained,\n                    'calendar-day-today': isToday,\n                }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n                    if (isCalendarPadding) {\n                        return;\n                    }\n                    this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n                        day,\n                        year }));\n                    // multiple only needs date info, so we can wipe out other fields like time\n                    if (multiple) {\n                        this.setActiveParts({\n                            month,\n                            day,\n                            year,\n                        }, isActive);\n                    }\n                    else {\n                        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n                            day,\n                            year }));\n                    }\n                }\n            }, text)));\n        }))));\n    }\n    renderCalendarBody() {\n        return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n            return this.renderMonth(month, year);\n        })));\n    }\n    renderCalendar(mode) {\n        return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n    }\n    renderTimeLabel() {\n        const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n        if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n            return;\n        }\n        return h(\"slot\", { name: \"time-label\" }, \"Time\");\n    }\n    renderTimeOverlay() {\n        const { disabled, hourCycle, isTimePopoverOpen, locale, formatOptions } = this;\n        const computedHourCycle = getHourCycle(locale, hourCycle);\n        const activePart = this.getActivePartsWithFallback();\n        return [\n            h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n            h(\"button\", { class: {\n                    'time-body': true,\n                    'time-body-active': isTimePopoverOpen,\n                }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", disabled: disabled, onClick: async (ev) => {\n                    const { popoverRef } = this;\n                    if (popoverRef) {\n                        this.isTimePopoverOpen = true;\n                        popoverRef.present(new CustomEvent('ionShadowTarget', {\n                            detail: {\n                                ionShadowTarget: ev.target,\n                            },\n                        }));\n                        await popoverRef.onWillDismiss();\n                        this.isTimePopoverOpen = false;\n                    }\n                } }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)),\n            h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n                    /**\n                     * Intersection Observers do not consistently fire between Blink and Webkit\n                     * when toggling the visibility of the popover and trying to scroll the picker\n                     * column to the correct time value.\n                     *\n                     * This will correctly scroll the element position to the correct time value,\n                     * before the popover is fully presented.\n                     */\n                    const cols = ev.target.querySelectorAll('ion-picker-column');\n                    // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n                    cols.forEach((col) => col.scrollActiveItemIntoView());\n                }, style: {\n                    '--offset-y': '-10px',\n                    '--min-width': 'fit-content',\n                },\n                // Allow native browser keyboard events to support up/down/home/end key\n                // navigation within the time picker.\n                keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n        ];\n    }\n    getHeaderSelectedDateText() {\n        var _a;\n        const { activeParts, formatOptions, multiple, titleSelectedDatesFormatter } = this;\n        const isArray = Array.isArray(activeParts);\n        let headerText;\n        if (multiple && isArray && activeParts.length !== 1) {\n            headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n                try {\n                    headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n                }\n                catch (e) {\n                    printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n                }\n            }\n        }\n        else {\n            // for exactly 1 day selected (multiple set or not), show a formatted version of that\n            headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : { weekday: 'short', month: 'short', day: 'numeric' });\n        }\n        return headerText;\n    }\n    renderHeader(showExpandedHeader = true) {\n        const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n        if (!hasSlottedTitle && !this.showDefaultTitle) {\n            return;\n        }\n        return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n    renderTime() {\n        const { presentation } = this;\n        const timeOnlyPresentation = presentation === 'time';\n        return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n    renderCalendarViewMonthYearPicker() {\n        return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n    renderDatetime(mode) {\n        const { presentation, preferWheel } = this;\n        /**\n         * Certain presentation types have separate grid and wheel displays.\n         * If preferWheel is true then we should show a wheel picker instead.\n         */\n        const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        if (preferWheel && hasWheelVariant) {\n            return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n        }\n        switch (presentation) {\n            case 'date-time':\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderTime(),\n                    this.renderFooter(),\n                ];\n            case 'time-date':\n                return [\n                    this.renderHeader(),\n                    this.renderTime(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n            case 'time':\n                return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n            case 'month':\n            case 'month-year':\n            case 'year':\n                return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n            default:\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n        }\n    }\n    render() {\n        const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n        const mode = getIonMode(this);\n        const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n        const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n        const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        const hasWheelVariant = hasDatePresentation && preferWheel;\n        renderHiddenInput(true, el, name, formatValue(value), disabled);\n        return (h(Host, { key: '7afbb1a7e6c78389b4588999779e5c90e010e85d', \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n                [mode]: true,\n                ['datetime-readonly']: readonly,\n                ['datetime-disabled']: disabled,\n                'show-month-and-year': shouldShowMonthAndYear,\n                'month-year-picker-open': monthYearPickerOpen,\n                [`datetime-presentation-${presentation}`]: true,\n                [`datetime-size-${size}`]: true,\n                [`datetime-prefer-wheel`]: hasWheelVariant,\n                [`datetime-grid`]: isGridStyle,\n            })) }, h(\"div\", { key: '297c458d4d17154cb297e2ef5926505bcb2d1fce', class: \"intersection-tracker\", ref: (el) => (this.intersectionTrackerRef = el) }), this.renderDatetime(mode)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet datetimeIds = 0;\nconst CANCEL_ROLE = 'datetime-cancel';\nconst CONFIRM_ROLE = 'datetime-confirm';\nconst WHEEL_ITEM_PART = 'wheel-item';\nconst WHEEL_ITEM_ACTIVE_PART = `active`;\nDatetime.style = {\n    ios: IonDatetimeIosStyle0,\n    md: IonDatetimeMdStyle0\n};\n\n/**\n * iOS Picker Enter Animation\n */\nconst iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.picker-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Picker Leave Animation\n */\nconst iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0.01);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.picker-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst pickerIosCss = \".sc-ion-picker-legacy-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.sc-ion-picker-legacy-ios-h{inset-inline-start:0}.overlay-hidden.sc-ion-picker-legacy-ios-h{display:none}.picker-wrapper.sc-ion-picker-legacy-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}.picker-toolbar.sc-ion-picker-legacy-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-legacy-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-legacy-ios:active,.picker-button.sc-ion-picker-legacy-ios:focus{outline:none}.picker-columns.sc-ion-picker-legacy-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;overflow:hidden}.picker-above-highlight.sc-ion-picker-legacy-ios,.picker-below-highlight.sc-ion-picker-legacy-ios{display:none;pointer-events:none}.sc-ion-picker-legacy-ios-h{--background:var(--ion-background-color, #fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-legacy-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:0.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-legacy-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-legacy-ios:last-child .picker-button.sc-ion-picker-legacy-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-legacy-ios:first-child{font-weight:normal;text-align:start}.picker-button.sc-ion-picker-legacy-ios,.picker-button.ion-activated.sc-ion-picker-legacy-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #0054e9);font-size:16px}.picker-columns.sc-ion-picker-legacy-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-legacy-ios{top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:10}.picker-above-highlight.sc-ion-picker-legacy-ios{inset-inline-start:0}.picker-below-highlight.sc-ion-picker-legacy-ios{top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:11}.picker-below-highlight.sc-ion-picker-legacy-ios{inset-inline-start:0}\";\nconst IonPickerLegacyIosStyle0 = pickerIosCss;\n\nconst pickerMdCss = \".sc-ion-picker-legacy-md-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.sc-ion-picker-legacy-md-h{inset-inline-start:0}.overlay-hidden.sc-ion-picker-legacy-md-h{display:none}.picker-wrapper.sc-ion-picker-legacy-md{border-radius:var(--border-radius);left:0;right:0;bottom:0;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}.picker-toolbar.sc-ion-picker-legacy-md{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-legacy-md{border:0;font-family:inherit}.picker-button.sc-ion-picker-legacy-md:active,.picker-button.sc-ion-picker-legacy-md:focus{outline:none}.picker-columns.sc-ion-picker-legacy-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;overflow:hidden}.picker-above-highlight.sc-ion-picker-legacy-md,.picker-below-highlight.sc-ion-picker-legacy-md{display:none;pointer-events:none}.sc-ion-picker-legacy-md-h{--background:var(--ion-background-color, #fff);--border-width:0.55px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-legacy-md{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;height:44px}.picker-button.sc-ion-picker-legacy-md,.picker-button.ion-activated.sc-ion-picker-legacy-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:1.1em;padding-inline-start:1.1em;-webkit-padding-end:1.1em;padding-inline-end:1.1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #0054e9);font-size:14px;font-weight:500;text-transform:uppercase;-webkit-box-shadow:none;box-shadow:none}.picker-columns.sc-ion-picker-legacy-md{height:216px;-webkit-perspective:1800px;perspective:1800px}.picker-above-highlight.sc-ion-picker-legacy-md{top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:81px;border-bottom:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to bottom, var(--ion-background-color, #fff) 20%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:10}.picker-above-highlight.sc-ion-picker-legacy-md{inset-inline-start:0}.picker-below-highlight.sc-ion-picker-legacy-md{top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:119px;border-top:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to top, var(--ion-background-color, #fff) 30%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:11}.picker-below-highlight.sc-ion-picker-legacy-md{inset-inline-start:0}\";\nconst IonPickerLegacyMdStyle0 = pickerMdCss;\n\nconst Picker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.buttons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.presented = false;\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.buttons = [];\n        this.columns = [];\n        this.cssClass = undefined;\n        this.duration = 0;\n        this.showBackdrop = true;\n        this.backdropDismiss = true;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        var _a;\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n    }\n    componentDidLoad() {\n        printIonWarning('ion-picker-legacy and ion-picker-legacy-column have been deprecated in favor of new versions of the ion-picker and ion-picker-column components. These new components display inline with your page content allowing for more presentation flexibility than before.', this.el);\n        /**\n         * If picker was rendered with isOpen=\"true\"\n         * then we should open picker immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the picker overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n        if (this.duration > 0) {\n            this.durationTimeout = setTimeout(() => this.dismiss(), this.duration);\n        }\n        unlock();\n    }\n    /**\n     * Dismiss the picker overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        if (this.durationTimeout) {\n            clearTimeout(this.durationTimeout);\n        }\n        const dismissed = await dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the picker did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionPickerDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the picker will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionPickerWillDismiss');\n    }\n    /**\n     * Get the column that matches the specified name.\n     *\n     * @param name The name of the column.\n     */\n    getColumn(name) {\n        return Promise.resolve(this.columns.find((column) => column.name === name));\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        if (isCancel(role)) {\n            return this.dismiss(undefined, role);\n        }\n        const shouldDismiss = await this.callButtonHandler(button);\n        if (shouldDismiss) {\n            return this.dismiss(this.getSelected(), button.role);\n        }\n        return Promise.resolve();\n    }\n    async callButtonHandler(button) {\n        if (button) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const rtn = await safeCall(button.handler, this.getSelected());\n            if (rtn === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n        }\n        return true;\n    }\n    getSelected() {\n        const selected = {};\n        this.columns.forEach((col, index) => {\n            const selectedColumn = col.selectedIndex !== undefined ? col.options[col.selectedIndex] : undefined;\n            selected[col.name] = {\n                text: selectedColumn ? selectedColumn.text : undefined,\n                value: selectedColumn ? selectedColumn.value : undefined,\n                columnIndex: index,\n            };\n        });\n        return selected;\n    }\n    render() {\n        const { htmlAttributes } = this;\n        const mode = getIonMode(this);\n        return (h(Host, Object.assign({ key: '0712fa8732141848e50ad2e08e2ba66ef2a48991', \"aria-modal\": \"true\", tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true,\n                // Used internally for styling\n                [`picker-${mode}`]: true, 'overlay-hidden': true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonPickerWillDismiss: this.dispatchCancelHandler }), h(\"ion-backdrop\", { key: 'c997632ef0488698739664012de5a6494de438b6', visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { key: '20045054a76cca997b410835fa6b305af22dcb12', tabindex: \"0\", \"aria-hidden\": \"true\" }), h(\"div\", { key: 'a73a6ac20b685ed9694d4fa95ea236ce5d63fdbf', class: \"picker-wrapper ion-overlay-wrapper\", role: \"dialog\" }, h(\"div\", { key: '1221cdcc2ff013deeba12170129c8fe78308330c', class: \"picker-toolbar\" }, this.buttons.map((b) => (h(\"div\", { class: buttonWrapperClass(b) }, h(\"button\", { type: \"button\", onClick: () => this.buttonClick(b), class: buttonClass(b) }, b.text))))), h(\"div\", { key: '45038a58430a4251100797b902e7034243137564', class: \"picker-columns\" }, h(\"div\", { key: 'c579bb69cddd4090912855ffd7f59536280f34b9', class: \"picker-above-highlight\" }), this.presented && this.columns.map((c) => h(\"ion-picker-legacy-column\", { col: c })), h(\"div\", { key: '978c6632d82a97d053b729c9de65dd3af4c4cee2', class: \"picker-below-highlight\" }))), h(\"div\", { key: 'e7e9dc437a3cf6d559e2cb0df71af69047a2ae31', tabindex: \"0\", \"aria-hidden\": \"true\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n};\nconst buttonWrapperClass = (button) => {\n    return {\n        [`picker-toolbar-${button.role}`]: button.role !== undefined,\n        'picker-toolbar-button': true,\n    };\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'picker-button': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\nPicker.style = {\n    ios: IonPickerLegacyIosStyle0,\n    md: IonPickerLegacyMdStyle0\n};\n\nconst pickerColumnIosCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}.picker-opt{inset-inline-start:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px;pointer-events:none}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:20px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}:host-context([dir=rtl]) .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}[dir=rtl] .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}@supports selector(:dir(rtl)){.picker-opt:dir(rtl){-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}}\";\nconst IonPickerLegacyColumnIosStyle0 = pickerColumnIosCss;\n\nconst pickerColumnMdCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}.picker-opt{inset-inline-start:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:22px;line-height:42px;pointer-events:none}.picker-opt{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;height:43px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:22px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}.picker-prefix,.picker-suffix,.picker-opt.picker-opt-selected{color:var(--ion-color-primary, #0054e9)}\";\nconst IonPickerLegacyColumnMdStyle0 = pickerColumnMdCss;\n\nconst PickerColumnCmp = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n        this.optHeight = 0;\n        this.rotateFactor = 0;\n        this.scaleFactor = 1;\n        this.velocity = 0;\n        this.y = 0;\n        this.noAnimate = true;\n        // `colDidChange` is a flag that gets set when the column is changed\n        // dynamically. When this flag is set, the column will refresh\n        // after the component re-renders to incorporate the new column data.\n        // This is necessary because `this.refresh` queries for the option elements,\n        // so it needs to wait for the latest elements to be available in the DOM.\n        // Ex: column is created with 3 options. User updates the column data\n        // to have 5 options. The column will still think it only has 3 options.\n        this.colDidChange = false;\n        this.col = undefined;\n    }\n    colChanged() {\n        this.colDidChange = true;\n    }\n    async connectedCallback() {\n        let pickerRotateFactor = 0;\n        let pickerScaleFactor = 0.81;\n        const mode = getIonMode(this);\n        if (mode === 'ios') {\n            pickerRotateFactor = -0.46;\n            pickerScaleFactor = 1;\n        }\n        this.rotateFactor = pickerRotateFactor;\n        this.scaleFactor = pickerScaleFactor;\n        this.gesture = (await import('./index-39782642.js')).createGesture({\n            el: this.el,\n            gestureName: 'picker-swipe',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.gesture.enable();\n        // Options have not been initialized yet\n        // Animation must be disabled through the `noAnimate` flag\n        // Otherwise, the options will render\n        // at the top of the column and transition down\n        this.tmrId = setTimeout(() => {\n            this.noAnimate = false;\n            // After initialization, `refresh()` will be called\n            // At this point, animation will be enabled. The options will\n            // animate as they are being selected.\n            this.refresh(true);\n        }, 250);\n    }\n    componentDidLoad() {\n        this.onDomChange();\n    }\n    componentDidUpdate() {\n        // Options may have changed since last update.\n        if (this.colDidChange) {\n            // Animation must be disabled through the `onDomChange` parameter.\n            // Otherwise, the recently added options will render\n            // at the top of the column and transition down\n            this.onDomChange(true, false);\n            this.colDidChange = false;\n        }\n    }\n    disconnectedCallback() {\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        if (this.tmrId)\n            clearTimeout(this.tmrId);\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    emitColChange() {\n        this.ionPickerColChange.emit(this.col);\n    }\n    setSelected(selectedIndex, duration) {\n        // if there is a selected index, then figure out it's y position\n        // if there isn't a selected index, then just use the top y position\n        const y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;\n        this.velocity = 0;\n        // set what y position we're at\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        this.update(y, duration, true);\n        this.emitColChange();\n    }\n    update(y, duration, saveY) {\n        if (!this.optsEl) {\n            return;\n        }\n        // ensure we've got a good round number :)\n        let translateY = 0;\n        let translateZ = 0;\n        const { col, rotateFactor } = this;\n        const prevSelected = col.selectedIndex;\n        const selectedIndex = (col.selectedIndex = this.indexForY(-y));\n        const durationStr = duration === 0 ? '' : duration + 'ms';\n        const scaleStr = `scale(${this.scaleFactor})`;\n        const children = this.optsEl.children;\n        for (let i = 0; i < children.length; i++) {\n            const button = children[i];\n            const opt = col.options[i];\n            const optOffset = i * this.optHeight + y;\n            let transform = '';\n            if (rotateFactor !== 0) {\n                const rotateX = optOffset * rotateFactor;\n                if (Math.abs(rotateX) <= 90) {\n                    translateY = 0;\n                    translateZ = 90;\n                    transform = `rotateX(${rotateX}deg) `;\n                }\n                else {\n                    translateY = -9999;\n                }\n            }\n            else {\n                translateZ = 0;\n                translateY = optOffset;\n            }\n            const selected = selectedIndex === i;\n            transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n            if (this.scaleFactor !== 1 && !selected) {\n                transform += scaleStr;\n            }\n            // Update transition duration\n            if (this.noAnimate) {\n                opt.duration = 0;\n                button.style.transitionDuration = '';\n            }\n            else if (duration !== opt.duration) {\n                opt.duration = duration;\n                button.style.transitionDuration = durationStr;\n            }\n            // Update transform\n            if (transform !== opt.transform) {\n                opt.transform = transform;\n            }\n            button.style.transform = transform;\n            /**\n             * Ensure that the select column\n             * item has the selected class\n             */\n            opt.selected = selected;\n            if (selected) {\n                button.classList.add(PICKER_OPT_SELECTED);\n            }\n            else {\n                button.classList.remove(PICKER_OPT_SELECTED);\n            }\n        }\n        this.col.prevSelected = prevSelected;\n        if (saveY) {\n            this.y = y;\n        }\n        if (this.lastIndex !== selectedIndex) {\n            // have not set a last index yet\n            hapticSelectionChanged();\n            this.lastIndex = selectedIndex;\n        }\n    }\n    decelerate() {\n        if (this.velocity !== 0) {\n            // still decelerating\n            this.velocity *= DECELERATION_FRICTION;\n            // do not let it go slower than a velocity of 1\n            this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);\n            let y = this.y + this.velocity;\n            if (y > this.minY) {\n                // whoops, it's trying to scroll up farther than the options we have!\n                y = this.minY;\n                this.velocity = 0;\n            }\n            else if (y < this.maxY) {\n                // gahh, it's trying to scroll down farther than we can!\n                y = this.maxY;\n                this.velocity = 0;\n            }\n            this.update(y, 0, true);\n            const notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;\n            if (notLockedIn) {\n                // isn't locked in yet, keep decelerating until it is\n                this.rafId = requestAnimationFrame(() => this.decelerate());\n            }\n            else {\n                this.velocity = 0;\n                this.emitColChange();\n                hapticSelectionEnd();\n            }\n        }\n        else if (this.y % this.optHeight !== 0) {\n            // needs to still get locked into a position so options line up\n            const currentPos = Math.abs(this.y % this.optHeight);\n            // create a velocity in the direction it needs to scroll\n            this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;\n            this.decelerate();\n        }\n    }\n    indexForY(y) {\n        return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n    }\n    onStart(detail) {\n        // We have to prevent default in order to block scrolling under the picker\n        // but we DO NOT have to stop propagation, since we still want\n        // some \"click\" events to capture\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        hapticSelectionStart();\n        // reset everything\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        const options = this.col.options;\n        let minY = options.length - 1;\n        let maxY = 0;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                minY = Math.min(minY, i);\n                maxY = Math.max(maxY, i);\n            }\n        }\n        this.minY = -(minY * this.optHeight);\n        this.maxY = -(maxY * this.optHeight);\n    }\n    onMove(detail) {\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        // update the scroll position relative to pointer start position\n        let y = this.y + detail.deltaY;\n        if (y > this.minY) {\n            // scrolling up higher than scroll area\n            y = Math.pow(y, 0.8);\n            this.bounceFrom = y;\n        }\n        else if (y < this.maxY) {\n            // scrolling down below scroll area\n            y += Math.pow(this.maxY - y, 0.9);\n            this.bounceFrom = y;\n        }\n        else {\n            this.bounceFrom = 0;\n        }\n        this.update(y, 0, false);\n    }\n    onEnd(detail) {\n        if (this.bounceFrom > 0) {\n            // bounce back up\n            this.update(this.minY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        else if (this.bounceFrom < 0) {\n            // bounce back down\n            this.update(this.maxY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n        if (this.velocity === 0 && detail.deltaY === 0) {\n            const opt = detail.event.target.closest('.picker-opt');\n            if (opt === null || opt === void 0 ? void 0 : opt.hasAttribute('opt-index')) {\n                this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n            }\n        }\n        else {\n            this.y += detail.deltaY;\n            if (Math.abs(detail.velocityY) < 0.05) {\n                const isScrollingUp = detail.deltaY > 0;\n                const optHeightFraction = (Math.abs(this.y) % this.optHeight) / this.optHeight;\n                if (isScrollingUp && optHeightFraction > 0.5) {\n                    this.velocity = Math.abs(this.velocity) * -1;\n                }\n                else if (!isScrollingUp && optHeightFraction <= 0.5) {\n                    this.velocity = Math.abs(this.velocity);\n                }\n            }\n            this.decelerate();\n        }\n    }\n    refresh(forceRefresh, animated) {\n        var _a;\n        let min = this.col.options.length - 1;\n        let max = 0;\n        const options = this.col.options;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                min = Math.min(min, i);\n                max = Math.max(max, i);\n            }\n        }\n        /**\n         * Only update selected value if column has a\n         * velocity of 0. If it does not, then the\n         * column is animating might land on\n         * a value different than the value at\n         * selectedIndex\n         */\n        if (this.velocity !== 0) {\n            return;\n        }\n        const selectedIndex = clamp(min, (_a = this.col.selectedIndex) !== null && _a !== void 0 ? _a : 0, max);\n        if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n            const y = selectedIndex * this.optHeight * -1;\n            const duration = animated ? TRANSITION_DURATION : 0;\n            this.velocity = 0;\n            this.update(y, duration, true);\n        }\n    }\n    onDomChange(forceRefresh, animated) {\n        const colEl = this.optsEl;\n        if (colEl) {\n            // DOM READ\n            // We perfom a DOM read over a rendered item, this needs to happen after the first render or after the the column has changed\n            this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;\n        }\n        this.refresh(forceRefresh, animated);\n    }\n    render() {\n        const col = this.col;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'c015eb8bc01b3287cbd1d71af0aa311b6be89d36', class: Object.assign({ [mode]: true, 'picker-col': true, 'picker-opts-left': this.col.align === 'left', 'picker-opts-right': this.col.align === 'right' }, getClassMap(col.cssClass)), style: {\n                'max-width': this.col.columnWidth,\n            } }, col.prefix && (h(\"div\", { key: 'f9de3fe2f5c7ad3256d6e5f44b6d03a2b1f96ffb', class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { key: '10f9c12aa174f96c7cf9adc30efbb26695c0aa64', class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: (el) => (this.optsEl = el) }, col.options.map((o, index) => (h(\"button\", { \"aria-label\": o.ariaLabel, class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text)))), col.suffix && (h(\"div\", { key: '1d9c0892ce56e0da9044c79eb953827166f5190b', class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"col\": [\"colChanged\"]\n    }; }\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\nPickerColumnCmp.style = {\n    ios: IonPickerLegacyColumnIosStyle0,\n    md: IonPickerLegacyColumnMdStyle0\n};\n\nexport { Datetime as ion_datetime, Picker as ion_picker_legacy, PickerColumnCmp as ion_picker_legacy_column };\n"],"x_google_ignoreList":[0]}