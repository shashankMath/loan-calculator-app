{"version":3,"file":"4639.2062564d07f01852.js","mappings":"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","names":["Radio","constructor","hostRef","registerInstance","this","ionFocus","createEvent","ionBlur","inputId","radioButtonIds","radioGroup","updateState","compareWith","value","radioGroupValue","checked","isOptionSelected","onClick","disabled","allowEmptySelection","onFocus","emit","onBlur","buttonTabindex","color","undefined","name","labelPlacement","justify","alignment","valueChanged","componentDidLoad","setFocus","ev","_this","_asyncToGenerator","stopPropagation","preventDefault","el","focus","setButtonTabindex","_this2","connectedCallback","closest","addEventListener","disconnectedCallback","removeEventListener","hasLabel","textContent","renderRadioControl","h","class","part","render","mode","getIonMode","inItem","hostContext","Host","key","createColorClasses","I","role","tabindex","getElement","watchers","style","ios","md","RadioGroup","ionChange","ionValueChange","radioGroupIds","labelId","setRadioTabindex","radios","getRadios","first","find","radio","focusable","selectedRadio","target","newValue","emitValueChange","_this3","header","querySelector","label","id","Array","from","querySelectorAll","event","onKeydown","inSelectInterface","contains","filter","includes","index","findIndex","current","next","length","previousValue","_this4","radioToFocus","r","tabIndex","renderHiddenInput","selector","cssClassMap","Object","assign","getClassMap","classes","map","getClassList","isArray","split","c","trim","forEach","SCHEME","openURL","_ref","url","direction","animation","test","router","document","push","_x","_x2","_x3","_x4","apply","arguments"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-28849c61.js';\nimport { a as addEventListener, b as removeEventListener, d as renderHiddenInput } from './helpers-da915de8.js';\nimport { i as isOptionSelected } from './compare-with-utils-a96ff2ea.js';\nimport { h as hostContext, c as createColorClasses } from './theme-01f3f29c.js';\nimport { b as getIonMode } from './ionic-global-c81d82ab.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color-checked:var(--ion-color-primary, #0054e9)}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{-webkit-margin-start:0;margin-inline-start:0}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:0.125rem;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}:host(.ion-focused) .radio-icon::after{inset-inline-start:-9px}.native-wrapper .radio-icon{width:0.9375rem;height:1.5rem}\";\nconst IonRadioIosStyle0 = radioIosCss;\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--border-width:0.125rem;--border-style:solid;--border-radius:50%}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled) .label-text-wrapper{opacity:0.38}:host(.radio-disabled) .native-wrapper{opacity:0.63}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}.native-wrapper .radio-icon{width:1.25rem;height:1.25rem}\";\nconst IonRadioMdStyle0 = radioMdCss;\n\nconst Radio = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        this.radioGroup = null;\n        this.updateState = () => {\n            if (this.radioGroup) {\n                const { compareWith, value: radioGroupValue } = this.radioGroup;\n                this.checked = isOptionSelected(radioGroupValue, this.value, compareWith);\n            }\n        };\n        this.onClick = () => {\n            const { radioGroup, checked, disabled } = this;\n            if (disabled) {\n                return;\n            }\n            /**\n             * The modern control does not use a native input\n             * inside of the radio host, so we cannot rely on the\n             * ev.preventDefault() behavior above. If the radio\n             * is checked and the parent radio group allows for empty\n             * selection, then we can set the checked state to false.\n             * Otherwise, the checked state should always be set\n             * to true because the checked state cannot be toggled.\n             */\n            if (checked && (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowEmptySelection)) {\n                this.checked = false;\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.checked = false;\n        this.buttonTabindex = -1;\n        this.color = undefined;\n        this.name = this.inputId;\n        this.disabled = false;\n        this.value = undefined;\n        this.labelPlacement = 'start';\n        this.justify = undefined;\n        this.alignment = undefined;\n    }\n    valueChanged() {\n        /**\n         * The new value of the radio may\n         * match the radio group's value,\n         * so we see if it should be checked.\n         */\n        this.updateState();\n    }\n    componentDidLoad() {\n        /**\n         * The value may be `undefined` if it\n         * gets set before the radio is\n         * rendered. This ensures that the radio\n         * is checked if the value matches. This\n         * happens most often when Angular is\n         * rendering the radio.\n         */\n        this.updateState();\n    }\n    /** @internal */\n    async setFocus(ev) {\n        if (ev !== undefined) {\n            ev.stopPropagation();\n            ev.preventDefault();\n        }\n        this.el.focus();\n    }\n    /** @internal */\n    async setButtonTabindex(value) {\n        this.buttonTabindex = value;\n    }\n    connectedCallback() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        const radioGroup = (this.radioGroup = this.el.closest('ion-radio-group'));\n        if (radioGroup) {\n            this.updateState();\n            addEventListener(radioGroup, 'ionValueChange', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const radioGroup = this.radioGroup;\n        if (radioGroup) {\n            removeEventListener(radioGroup, 'ionValueChange', this.updateState);\n            this.radioGroup = null;\n        }\n    }\n    get hasLabel() {\n        return this.el.textContent !== '';\n    }\n    renderRadioControl() {\n        return (h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })));\n    }\n    render() {\n        const { checked, disabled, color, el, justify, labelPlacement, hasLabel, buttonTabindex, alignment } = this;\n        const mode = getIonMode(this);\n        const inItem = hostContext('ion-item', el);\n        return (h(Host, { key: '5a0adab55ad009305de4856fa1b9f93f2279a734', onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onClick, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': inItem,\n                'radio-checked': checked,\n                'radio-disabled': disabled,\n                [`radio-justify-${justify}`]: justify !== undefined,\n                [`radio-alignment-${alignment}`]: alignment !== undefined,\n                [`radio-label-placement-${labelPlacement}`]: true,\n                // Focus and active styling should not apply when the radio is in an item\n                'ion-activatable': !inItem,\n                'ion-focusable': !inItem,\n            }), role: \"radio\", \"aria-checked\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabindex: buttonTabindex }, h(\"label\", { key: 'f5673a798e6d87868339f046445f707e1d93b7b6', class: \"radio-wrapper\" }, h(\"div\", { key: 'e9190c06f75a171cab63e3f74ccf771c3ed87005', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !hasLabel,\n            }, part: \"label\" }, h(\"slot\", { key: '6cedf4e7b3bd03e4a635727dd7b6094bab64af64' })), h(\"div\", { key: '26dd48d9d2848b7f100b732abdc4a3171adde483', class: \"native-wrapper\" }, this.renderRadioControl()))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n    ios: IonRadioIosStyle0,\n    md: IonRadioMdStyle0\n};\n\nconst RadioGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        this.setRadioTabindex = (value) => {\n            const radios = this.getRadios();\n            // Get the first radio that is not disabled and the checked one\n            const first = radios.find((radio) => !radio.disabled);\n            const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n            if (!first && !checked) {\n                return;\n            }\n            // If an enabled checked radio exists, set it to be the focusable radio\n            // otherwise we default to focus the first radio\n            const focusable = checked || first;\n            for (const radio of radios) {\n                const tabindex = radio === focusable ? 0 : -1;\n                radio.setButtonTabindex(tabindex);\n            }\n        };\n        this.onClick = (ev) => {\n            ev.preventDefault();\n            /**\n             * The Radio Group component mandates that only one radio button\n             * within the group can be selected at any given time. Since `ion-radio`\n             * is a shadow DOM component, it cannot natively perform this behavior\n             * using the `name` attribute.\n             */\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\n            /**\n             * Our current disabled prop definition causes Stencil to mark it\n             * as optional. While this is not desired, fixing this behavior\n             * in Stencil is a significant breaking change, so this effort is\n             * being de-risked in STENCIL-917. Until then, we compromise\n             * here by checking for falsy `disabled` values instead of strictly\n             * checking `disabled === false`.\n             */\n            if (selectedRadio && !selectedRadio.disabled) {\n                const currentValue = this.value;\n                const newValue = selectedRadio.value;\n                if (newValue !== currentValue) {\n                    this.value = newValue;\n                    this.emitValueChange(ev);\n                }\n                else if (this.allowEmptySelection) {\n                    this.value = undefined;\n                    this.emitValueChange(ev);\n                }\n            }\n        };\n        this.allowEmptySelection = false;\n        this.compareWith = undefined;\n        this.name = this.inputId;\n        this.value = undefined;\n    }\n    valueChanged(value) {\n        this.setRadioTabindex(value);\n        this.ionValueChange.emit({ value });\n    }\n    componentDidLoad() {\n        /**\n         * There's an issue when assigning a value to the radio group\n         * within the Angular primary content (rendering within the\n         * app component template). When the template is isolated to a route,\n         * the value is assigned correctly.\n         * To address this issue, we need to ensure that the watcher is\n         * called after the component has finished loading,\n         * allowing the emit to be dispatched correctly.\n         */\n        this.valueChanged(this.value);\n    }\n    async connectedCallback() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n        if (header) {\n            const label = (this.label = header.querySelector('ion-label'));\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n    }\n    getRadios() {\n        return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange(event) {\n        const { value } = this;\n        this.ionChange.emit({ value, event });\n    }\n    onKeydown(ev) {\n        // We don't want the value to automatically change/emit when the radio group is part of a select interface\n        // as this will cause the interface to close when navigating through the radio group options\n        const inSelectInterface = !!this.el.closest('ion-select-popover') || !!this.el.closest('ion-select-modal');\n        if (ev.target && !this.el.contains(ev.target)) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const radios = this.getRadios().filter((radio) => !radio.disabled);\n        // Only move the radio if the current focus is in the radio group\n        if (ev.target && radios.includes(ev.target)) {\n            const index = radios.findIndex((radio) => radio === ev.target);\n            const current = radios[index];\n            let next;\n            // If hitting arrow down or arrow right, move to the next radio\n            // If we're on the last radio, move to the first radio\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n                next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n            }\n            // If hitting arrow up or arrow left, move to the previous radio\n            // If we're on the first radio, move to the last radio\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n                next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n            }\n            if (next && radios.includes(next)) {\n                next.setFocus(ev);\n                if (!inSelectInterface) {\n                    this.value = next.value;\n                    this.emitValueChange(ev);\n                }\n            }\n            // Update the radio group value when a user presses the\n            // space bar on top of a selected radio\n            if ([' '].includes(ev.key)) {\n                const previousValue = this.value;\n                this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n                if (previousValue !== this.value || this.allowEmptySelection) {\n                    /**\n                     * Value change should only be emitted if the value is different,\n                     * such as selecting a new radio with the space bar or if\n                     * the radio group allows for empty selection and the user\n                     * is deselecting a checked radio.\n                     */\n                    this.emitValueChange(ev);\n                }\n                // Prevent browsers from jumping\n                // to the bottom of the screen\n                ev.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    async setFocus() {\n        const radioToFocus = this.getRadios().find((r) => r.tabIndex !== -1);\n        radioToFocus === null || radioToFocus === void 0 ? void 0 : radioToFocus.setFocus();\n    }\n    render() {\n        const { label, labelId, el, name, value } = this;\n        const mode = getIonMode(this);\n        renderHiddenInput(true, el, name, value, false);\n        return h(Host, { key: 'a853e38901f0f4ba17bbf21ebb5da5b5c20b327e', role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode });\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}