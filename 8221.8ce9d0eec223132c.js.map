{"version":3,"file":"8221.8ce9d0eec223132c.js","mappings":"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","names":["Breadcrumb","constructor","hostRef","registerInstance","this","ionFocus","createEvent","ionBlur","collapsedClick","inheritedAttributes","onFocus","emit","onBlur","collapsedIndicatorClick","ionShadowTarget","collapsedRef","collapsed","last","undefined","showCollapsedIndicator","color","active","disabled","download","href","rel","separator","target","routerDirection","routerAnimation","componentWillLoad","inheritAriaAttributes","el","isClickable","render","clickable","TagType","mode","getIonMode","attrs","showSeparator","h","Host","key","onClick","ev","openURL","class","createColorClasses","z","hostContext","Object","assign","part","name","ref","collapsedEl","icon","ellipsisHorizontal","lazy","chevronForwardOutline","getElement","style","ios","md","Breadcrumbs","ionCollapsedClick","breadcrumbsInit","setBreadcrumbSeparator","setMaxItems","resetActiveBreadcrumb","activeBreadcrumb","getBreadcrumbs","find","breadcrumb","activeChanged","itemsAfterCollapse","itemsBeforeCollapse","maxItems","breadcrumbs","length","forEach","index","Array","from","querySelectorAll","slotChanged","onCollapsedClick","collapsedBreadcrumbs","filter","detail","maxItemsChanged","a","onSlotchange","watchers","selector","closest","cssClassMap","getClassMap","classes","map","getClassList","isArray","split","c","trim","SCHEME","_ref","_asyncToGenerator","url","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","arguments"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-28849c61.js';\nimport { i as inheritAriaAttributes } from './helpers-da915de8.js';\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-01f3f29c.js';\nimport { m as chevronForwardOutline, n as ellipsisHorizontal } from './index-e2cf2ceb.js';\nimport { b as getIonMode } from './ionic-global-c81d82ab.js';\n\nconst breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:1rem;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:1.375rem}:host{--color:var(--ion-color-step-850, var(--ion-text-color-step-150, #2d4665));--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, var(--ion-background-color-step-50, rgba(233, 237, 243, 0.7)));font-size:clamp(16px, 1rem, 22px)}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, var(--ion-text-color-step-250, #445b78))}.breadcrumb-separator{color:var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a))}::slotted(ion-icon){color:var(--ion-color-step-400, var(--ion-text-color-step-600, #92a0b3));font-size:min(1.125rem, 21.6px)}::slotted(ion-icon[slot=start]){-webkit-margin-end:8px;margin-inline-end:8px}::slotted(ion-icon[slot=end]){-webkit-margin-start:8px;margin-inline-start:8px}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, var(--ion-text-color-step-150, #242d39))}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, var(--ion-background-color-step-100, #e9edf3));color:var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a))}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, var(--ion-background-color-step-150, #d9e0ea))}.breadcrumbs-collapsed-indicator ion-icon{font-size:min(1.375rem, 22px)}\";\nconst IonBreadcrumbIosStyle0 = breadcrumbIosCss;\n\nconst breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:1rem;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:1.375rem}:host{--color:var(--ion-color-step-600, var(--ion-text-color-step-400, #677483));--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, var(--ion-text-color-step-200, #35404e));--background-focused:var(--ion-color-step-50, var(--ion-background-color-step-50, #fff))}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px}.breadcrumb-separator{-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px;margin-top:-1px}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a))}::slotted(ion-icon){color:var(--ion-color-step-550, var(--ion-text-color-step-450, #7d8894));font-size:1.125rem}::slotted(ion-icon[slot=start]){-webkit-margin-end:8px;margin-inline-end:8px}::slotted(ion-icon[slot=end]){-webkit-margin-start:8px;margin-inline-start:8px}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, var(--ion-text-color-step-150, #222d3a))}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, var(--ion-background-color-step-100, #eef1f3));color:var(--ion-color-step-550, var(--ion-text-color-step-450, #73849a))}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, var(--ion-background-color-step-150, #dfe5e8))}\";\nconst IonBreadcrumbMdStyle0 = breadcrumbMdCss;\n\nconst Breadcrumb = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\n        this.inheritedAttributes = {};\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.collapsedIndicatorClick = () => {\n            this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\n        };\n        this.collapsed = false;\n        this.last = undefined;\n        this.showCollapsedIndicator = undefined;\n        this.color = undefined;\n        this.active = false;\n        this.disabled = false;\n        this.download = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.separator = undefined;\n        this.target = undefined;\n        this.routerDirection = 'forward';\n        this.routerAnimation = undefined;\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n    }\n    isClickable() {\n        return this.href !== undefined;\n    }\n    render() {\n        const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\n        const clickable = this.isClickable();\n        const TagType = this.href === undefined ? 'span' : 'a';\n        // Links can still be tabbed to when set to disabled if they have an href\n        // in order to truly disable them we can keep it as an anchor but remove the href\n        const href = disabled ? undefined : this.href;\n        const mode = getIonMode(this);\n        const attrs = TagType === 'span'\n            ? {}\n            : {\n                download,\n                href,\n                target,\n            };\n        // If the breadcrumb is collapsed, check if it contains the collapsed indicator\n        // to show the separator as long as it isn't also the last breadcrumb\n        // otherwise if not collapsed use the value in separator\n        const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\n        return (h(Host, { key: '32ca61c83721dff52b5e97171ed449dce3584a55', onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n                [mode]: true,\n                'breadcrumb-active': active,\n                'breadcrumb-collapsed': collapsed,\n                'breadcrumb-disabled': disabled,\n                'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'ion-activatable': clickable,\n                'ion-focusable': clickable,\n            }) }, h(TagType, Object.assign({ key: '479feb845f4a6d8009d5422b33eb423730b9722b' }, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { key: '3c5dcaeb0d258235d1b7707868026ff1d1404099', name: \"start\" }), h(\"slot\", { key: 'f1cfb934443cd97dc220882c5e3596ea879d66cf' }), h(\"slot\", { key: '539710121b5b1f3ee8d4c24a9651b67c2ae08add', name: \"end\" })), showCollapsedIndicator && (h(\"button\", { key: 'ed53a95ccd89022c8b7bee0658a221ec62a5c73b', part: \"collapsed-indicator\", \"aria-label\": \"Show more breadcrumbs\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\n                'breadcrumbs-collapsed-indicator': true,\n            } }, h(\"ion-icon\", { key: 'a849e1142a86f06f207cf11662fa2a560ab7fc6a', \"aria-hidden\": \"true\", icon: ellipsisHorizontal, lazy: false }))), showSeparator && (\n        /**\n         * Separators should not be announced by narrators.\n         * We add aria-hidden on the span so that this applies\n         * to any custom separators too.\n         */\n        h(\"span\", { key: 'fc3c741cb01fafef8b26046c7ee5b190efc69a7c', class: \"breadcrumb-separator\", part: \"separator\", \"aria-hidden\": \"true\" }, h(\"slot\", { key: '4871932ae1dae520767e0713e7cee2d11b0bba6d', name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\n    }\n    get el() { return getElement(this); }\n};\nBreadcrumb.style = {\n    ios: IonBreadcrumbIosStyle0,\n    md: IonBreadcrumbMdStyle0\n};\n\nconst breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}\";\nconst IonBreadcrumbsIosStyle0 = breadcrumbsIosCss;\n\nconst breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0}\";\nconst IonBreadcrumbsMdStyle0 = breadcrumbsMdCss;\n\nconst Breadcrumbs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\n        this.breadcrumbsInit = () => {\n            this.setBreadcrumbSeparator();\n            this.setMaxItems();\n        };\n        this.resetActiveBreadcrumb = () => {\n            const breadcrumbs = this.getBreadcrumbs();\n            // Only reset the active breadcrumb if we were the ones to change it\n            // otherwise use the one set on the component\n            const activeBreadcrumb = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n            if (activeBreadcrumb && this.activeChanged) {\n                activeBreadcrumb.active = false;\n            }\n        };\n        this.setMaxItems = () => {\n            const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n            const breadcrumbs = this.getBreadcrumbs();\n            for (const breadcrumb of breadcrumbs) {\n                breadcrumb.showCollapsedIndicator = false;\n                breadcrumb.collapsed = false;\n            }\n            // If the number of breadcrumbs exceeds the maximum number of items\n            // that should show and the items before / after collapse do not\n            // exceed the maximum items then we need to collapse the breadcrumbs\n            const shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\n            if (shouldCollapse) {\n                // Show the collapsed indicator in the first breadcrumb that collapses\n                breadcrumbs.forEach((breadcrumb, index) => {\n                    if (index === itemsBeforeCollapse) {\n                        breadcrumb.showCollapsedIndicator = true;\n                    }\n                    // Collapse all breadcrumbs that have an index greater than or equal to\n                    // the number before collapse and an index less than the total number\n                    // of breadcrumbs minus the items that should show after the collapse\n                    if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\n                        breadcrumb.collapsed = true;\n                    }\n                });\n            }\n        };\n        this.setBreadcrumbSeparator = () => {\n            const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\n            const breadcrumbs = this.getBreadcrumbs();\n            // Check if an active breadcrumb exists already\n            const active = breadcrumbs.find((breadcrumb) => breadcrumb.active);\n            // Set the separator on all but the last breadcrumb\n            for (const breadcrumb of breadcrumbs) {\n                // The only time the last breadcrumb changes is when\n                // itemsAfterCollapse is set to 0, in this case the\n                // last breadcrumb will be the collapsed indicator\n                const last = maxItems !== undefined && itemsAfterCollapse === 0\n                    ? breadcrumb === breadcrumbs[itemsBeforeCollapse]\n                    : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\n                breadcrumb.last = last;\n                // If the breadcrumb has defined whether or not to show the\n                // separator then use that value, otherwise check if it's the\n                // last breadcrumb\n                const separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\n                breadcrumb.separator = separator;\n                // If there is not an active breadcrumb already\n                // set the last one to active\n                if (!active && last) {\n                    breadcrumb.active = true;\n                    this.activeChanged = true;\n                }\n            }\n        };\n        this.getBreadcrumbs = () => {\n            return Array.from(this.el.querySelectorAll('ion-breadcrumb'));\n        };\n        this.slotChanged = () => {\n            this.resetActiveBreadcrumb();\n            this.breadcrumbsInit();\n        };\n        this.collapsed = undefined;\n        this.activeChanged = undefined;\n        this.color = undefined;\n        this.maxItems = undefined;\n        this.itemsBeforeCollapse = 1;\n        this.itemsAfterCollapse = 1;\n    }\n    onCollapsedClick(ev) {\n        const breadcrumbs = this.getBreadcrumbs();\n        const collapsedBreadcrumbs = breadcrumbs.filter((breadcrumb) => breadcrumb.collapsed);\n        this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), { collapsedBreadcrumbs }));\n    }\n    maxItemsChanged() {\n        this.resetActiveBreadcrumb();\n        this.breadcrumbsInit();\n    }\n    componentWillLoad() {\n        this.breadcrumbsInit();\n    }\n    render() {\n        const { color, collapsed } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'fe64e9cdf597ede2db140bf5fa05a0359d82db57', class: createColorClasses(color, {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'breadcrumbs-collapsed': collapsed,\n            }) }, h(\"slot\", { key: 'a2c99b579e339055c50a613d5c6b61032f5ddffe', onSlotchange: this.slotChanged })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"maxItems\": [\"maxItemsChanged\"],\n        \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\n        \"itemsAfterCollapse\": [\"maxItemsChanged\"]\n    }; }\n};\nBreadcrumbs.style = {\n    ios: IonBreadcrumbsIosStyle0,\n    md: IonBreadcrumbsMdStyle0\n};\n\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}